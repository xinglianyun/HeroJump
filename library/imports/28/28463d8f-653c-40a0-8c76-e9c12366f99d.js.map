{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\Hero.js"],"names":["HeroStatus","cc","Enum","dead","running","jump","fly","Class","extends","Component","properties","colliderProxy","default","type","require","onLoad","Global","hero","start","_status","_leftOrRight","setRealListener","setLeftOrRight","leftOrRight","getLeftOrRight","run","onCollisionEnter","other","self","console","log","group","game","groupList","node","groupIndex","gameMainScene","gameOver","getComponent","beVictory","beKilled"],"mappings":";;;;;;AAAA;AACA,IAAIA,aAAaC,GAAGC,IAAH,CAAQ;AACrBC,UAAO,CAAC,CADa;AAErBC,aAAU,CAAC,CAFU;AAGrBC,UAAO,CAAC,CAHa;AAIrBC,SAAM,CAAC;AAJc,CAAR,CAAjB;;AAOAL,GAAGM,KAAH,CAAS;AACLC,aAASP,GAAGQ,SADP;;AAGLC,gBAAY;AACRC,uBAAgB;AACZC,qBAAU,IADE;AAEZC,kBAAOC,QAAQ,mBAAR;AAFK;AADR,KAHP;;AAUL;;AAEAC,UAZK,oBAYK;AACNC,eAAOC,IAAP,GAAc,IAAd;AACH,KAdI;AAgBLC,SAhBK,mBAgBI;AACL,aAAKC,OAAL,GAAenB,WAAWI,OAA1B;AACA,aAAKgB,YAAL,GAAoB,CAAC,CAArB;AACA,aAAKT,aAAL,CAAmBU,eAAnB,CAAmC,IAAnC;AACH,KApBI;;;AAsBL;;AAEA;AACA;;;AAGAC,oBAAiB,wBAASC,WAAT,EAAqB;AAClC,aAAKH,YAAL,GAAoBG,WAApB;AACH,KA9BI;;AAgCL;;;AAGAC,oBAAiB,0BAAU;AACvB,eAAO,KAAKJ,YAAZ;AACH,KArCI;;AAuCLK,SAAM,eAAU;AACZ,aAAKN,OAAL,GAAenB,WAAWI,OAA1B;AACH,KAzCI;;AA2CLC,UAAO,gBAAU;AACb,aAAKc,OAAL,GAAenB,WAAWK,IAA1B;AACH,KA7CI;;AA+CLC,SAAM,eAAU;AACZ,aAAKa,OAAL,GAAenB,WAAWM,GAA1B;AACH,KAjDI;;AAmDLH,UAAO,gBAAU;AACb,aAAKgB,OAAL,GAAenB,WAAWG,IAA1B;AACH,KArDI;;AAuDL;;;;;AAKAuB,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrCC,gBAAQC,GAAR,CAAY,oBAAZ;;AAEA,YAAG,KAAKX,OAAL,KAAiBnB,WAAWG,IAA/B,EAAoC;AAChC,gBAAI4B,QAAQ9B,GAAG+B,IAAH,CAAQC,SAAR,CAAkBN,MAAMO,IAAN,CAAWC,UAA7B,CAAZ;AACA,gBAAGJ,UAAU,OAAb,EAAqB;AACjB,oBAAG,KAAKZ,OAAL,KAAiBnB,WAAWI,OAA/B,EAAuC;AACnC;AACA,yBAAKD,IAAL;AACAa,2BAAOoB,aAAP,CAAqBC,QAArB;AACAV,0BAAMO,IAAN,CAAWI,YAAX,CAAwB,OAAxB,EAAiCC,SAAjC;AACH,iBALD,MAKK;AACDZ,0BAAMO,IAAN,CAAWI,YAAX,CAAwB,OAAxB,EAAiCE,QAAjC;AACH;AACJ,aATD,MASM,CAEL;AACJ;AACJ;AACD;AA/EK,CAAT","file":"Hero.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// 英雄状态\r\nvar HeroStatus = cc.Enum({\r\n    dead : -1,\r\n    running : -1,\r\n    jump : -1,\r\n    fly : -1\r\n})\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        colliderProxy : {\r\n            default : null,\r\n            type : require(\"HeroColliderProxy\")\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        Global.hero = this\r\n    },\r\n\r\n    start () {\r\n        this._status = HeroStatus.running\r\n        this._leftOrRight = -1\r\n        this.colliderProxy.setRealListener(this)\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    //************************************start logic*************************************************//\r\n    /**\r\n     * desc: left(-1) or right(1)\r\n     */\r\n    setLeftOrRight : function(leftOrRight){\r\n        this._leftOrRight = leftOrRight\r\n    },\r\n\r\n    /**\r\n     * desc: return left or right\r\n     */\r\n    getLeftOrRight : function(){\r\n        return this._leftOrRight\r\n    },\r\n\r\n    run : function(){\r\n        this._status = HeroStatus.running\r\n    },\r\n\r\n    jump : function(){\r\n        this._status = HeroStatus.jump\r\n    },\r\n\r\n    fly : function(){\r\n        this._status = HeroStatus.fly\r\n    },\r\n\r\n    dead : function(){\r\n        this._status = HeroStatus.dead\r\n    },\r\n\r\n    /**\r\n     * desc: 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionEnter: function (other, self) {\r\n        console.log('on collision enter')\r\n        \r\n        if(this._status !== HeroStatus.dead){\r\n            var group = cc.game.groupList[other.node.groupIndex]\r\n            if(group === \"enemy\"){\r\n                if(this._status === HeroStatus.running){\r\n                    // dead, game oveer\r\n                    this.dead()\r\n                    Global.gameMainScene.gameOver()\r\n                    other.node.getComponent(\"Enemy\").beVictory()\r\n                }else{\r\n                    other.node.getComponent(\"Enemy\").beKilled()\r\n                }\r\n            }else {\r\n\r\n            }\r\n        }\r\n    },\r\n    //************************************end logic*************************************************//\r\n});\r\n"]}