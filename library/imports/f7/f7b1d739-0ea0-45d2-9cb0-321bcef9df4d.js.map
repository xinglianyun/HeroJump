{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\GameManager.js"],"names":["GameData","require","cc","Class","extends","Component","properties","birdEnemyPrefab","default","type","Prefab","catEnemyPrefab","crakerLongEnemyPrefab","crakerShortEnemyPrefab","dartEnemyPrefab","dartPrefab","runEnemyPrefab","bannerPrefab","_totalTime","Float","initEnemyRate","level","EnemyConfig","length","config","_enemyTotalRate","_enemyRate","enemyIndex","enemy","rate","initEnemyPool","_birdEnemyPool","NodePool","_birdPoolCapacity","i","instantiate","put","_catEnemyPool","_catPoolCapacity","_crackerLongEnemyPool","_crackerLongPoolCapacity","_crackerShortEnemyPool","_crackerShortPoolCapacity","_dartEnemyPool","_dartEnemyPoolCapacity","_dartNodePool","_dartNodePoolCapacity","_runEnemyPool","_runEnemyPoolCapacity","onLoad","Global","gameManager","game","addPersistRootNode","Node","director","getCollisionManager","enabled","start","gameOveer","_enemyLevel","update","dt","generateEnemy","distance","enemyLevel","height","anchor","Math","random","enemyConfig","generateEnemyByType","enemyType","_createBird","_createDart2","enemyNode","bird","get","dart2","dartNode","getComponent","addChildDartNode","collectEnemy","node","getTimeIntevalWithDistance","space","gameOver"],"mappings":"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","file":"GameManager.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["/**\r\n * desc     :   game manager contains the Global Varible and some calculate logic\r\n * authur   :   xinghui\r\n */\r\nvar GameData = require(\"GameData\")\r\ncc.Class({\r\n\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        birdEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        catEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        crakerLongEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        crakerShortEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        dartEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        dartPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        runEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        bannerPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        _totalTime : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },   \r\n    },\r\n    //logic func\r\n    initEnemyRate : function(){\r\n        for(let level = 0; level < GameData.EnemyConfig.length; ++level){\r\n            var config = GameData.EnemyConfig[level]\r\n            this._enemyTotalRate[level] = 0\r\n            this._enemyRate[level] = []\r\n            for(let enemyIndex = 0; enemyIndex < config.enemy.length; ++enemyIndex){\r\n                var enemy = config.enemy[enemyIndex]\r\n                this._enemyTotalRate[level] += enemy.rate\r\n                this._enemyRate[level][enemyIndex] = this._enemyTotalRate[level]\r\n            }\r\n        }\r\n    },\r\n\r\n    initEnemyPool : function(){\r\n        this._birdEnemyPool = new cc.NodePool()\r\n        this._birdPoolCapacity = 2\r\n        for(let i = 0; i < this._birdPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.birdEnemyPrefab); // bird pool\r\n            this._birdEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._catEnemyPool = new cc.NodePool()\r\n        this._catPoolCapacity = 2\r\n        for(let i = 0; i < this._catPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.catEnemyPrefab); // cat pool\r\n            this._catEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._crackerLongEnemyPool = new cc.NodePool()\r\n        this._crackerLongPoolCapacity = 2\r\n        for(let i = 0; i < this._crackerLongPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.crakerLongEnemyPrefab); // cracker long\r\n            this._crackerLongEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._crackerShortEnemyPool = new cc.NodePool()\r\n        this._crackerShortPoolCapacity = 2\r\n        for(let i = 0; i < this._crackerShortPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.crakerShortEnemyPrefab); // cracker short\r\n            this._crackerShortEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._dartEnemyPool = new cc.NodePool()\r\n        this._dartEnemyPoolCapacity = 2\r\n        for(let i = 0; i < this._dartEnemyPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.dartEnemyPrefab); // dart enemy pool\r\n            this._dartEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._dartNodePool = new cc.NodePool()\r\n        this._dartNodePoolCapacity = 3\r\n        for(let i = 0; i < this._dartNodePoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.dartPrefab); // dart node pool\r\n            this._dartNodePool.put(enemy)\r\n        }\r\n\r\n        this._runEnemyPool = new cc.NodePool()\r\n        this._runEnemyPoolCapacity = 2\r\n        for(let i = 0; i < this._runEnemyPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.runEnemyPrefab); // run enemy pool\r\n            this._runEnemyPool.put(enemy)\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n        Global.gameManager = this\r\n        cc.game.addPersistRootNode(this.Node);\r\n        cc.director.getCollisionManager().enabled = true\r\n    },\r\n\r\n    start () {\r\n        // Game Over\r\n        this.gameOveer = false\r\n        // enemy level\r\n        this._enemyLevel = 0\r\n\r\n        // enemy rate\r\n        this._enemyRate = []\r\n        this._enemyTotalRate = []\r\n        this.initEnemyRate()\r\n\r\n        // enemy pool \r\n        this.initEnemyPool()\r\n        \r\n    },\r\n\r\n    update (dt) {\r\n        this._totalTime += dt;\r\n    },\r\n\r\n    // logic\r\n    // \r\n    generateEnemy : function(distance){\r\n        let enemy = null\r\n        // get config\r\n        var enemyLevel = 0\r\n        for(let level = 0; level < GameData.EnemyConfig.length; ++level){\r\n            var config = GameData.EnemyConfig[level]\r\n            if(distance <= config.height){\r\n                enemyLevel = level\r\n                break\r\n            }\r\n            if(level === GameData.EnemyConfig.length-1){\r\n                enemyLevel = GameData.EnemyConfig.length-1\r\n                break\r\n            }\r\n        }\r\n        \r\n        var anchor = Math.random() * this._enemyTotalRate[enemyLevel]\r\n        for(let enemyIndex = 0; enemyIndex < this._enemyRate[enemyLevel].length; ++enemyIndex){\r\n            if(anchor <= this._enemyRate[enemyLevel][enemyIndex]){\r\n                var enemyConfig = GameData.EnemyConfig[enemyLevel].enemy[enemyIndex]\r\n                enemy = this.generateEnemyByType(enemyConfig.enemyType)\r\n                break\r\n            }\r\n        }\r\n\r\n        return enemy\r\n    },\r\n\r\n    generateEnemyByType : function(enemyType){\r\n        let enemy = null\r\n        enemyType = \"dart2\" //todo : test\r\n        switch(enemyType){\r\n            case \"bird\":\r\n                enemy = this._createBird()\r\n                break;\r\n            case \"dart2\":\r\n                enemy = this._createDart2()\r\n                break;\r\n        }\r\n        return {enemyNode : enemy, type : enemyType}\r\n    },\r\n\r\n    _createBird : function(){\r\n        let bird = null\r\n        bird = this._birdEnemyPool.get()\r\n        if(!bird){\r\n            bird = cc.instantiate(this.birdEnemyPrefab); \r\n        }\r\n        return bird\r\n    },\r\n\r\n    _createDart2 : function(){\r\n        let dart2 = null\r\n        dart2 = this._dartEnemyPool.get()\r\n        if(!dart2){\r\n            dart2 = cc.instantiate(this.dartEnemyPrefab);\r\n        }\r\n\r\n        for(let i = 0; i < 2; ++i){\r\n            var dartNode = this._dartNodePool.get()\r\n            if(!dartNode){\r\n                dartNode = cc.instantiate(this.dartPrefab)\r\n            }\r\n            dart2.getComponent(\"DartEnemy\").addChildDartNode(dartNode)\r\n        }\r\n\r\n        return dart2\r\n    },\r\n\r\n    //\r\n    collectEnemy : function(node, type)\r\n    {\r\n        switch(type){\r\n            case \"bird\":\r\n                this._birdEnemyPool.put(node)\r\n                break;\r\n            case \"dartenemy\":\r\n                this._dartEnemyPool.put(node)\r\n                break;\r\n            case \"dartnode\":\r\n                this._dartNodePool.put(node)\r\n                break;\r\n        }\r\n\r\n    },\r\n\r\n    getTimeIntevalWithDistance : function(distance){\r\n        for(let level = 0; level < GameData.EnemyConfig.length; ++level){\r\n            var config = GameData.EnemyConfig[level]\r\n            if(distance <= config.height)\r\n                return config.space\r\n        }\r\n        return GameData.EnemyConfig[GameData.EnemyConfig.length-1].space\r\n    },\r\n\r\n    gameOver : function(){\r\n        // game over\r\n        \r\n    }\r\n   \r\n});\r\n"]}