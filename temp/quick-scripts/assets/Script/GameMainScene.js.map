{"version":3,"sources":["GameMainScene.js"],"names":["cc","Class","extends","Component","properties","heroNode","default","type","Node","leftHeroPosNode","rightHeroPosNode","sideLeft","sideRight","enemyNodeLeft","enemyNodeRight","bottomBG","scoreLabel","Label","_runSpeed","Float","maxSpeed","accSpeed","_startEnemyDistance","_posYInteval","maxPosYInteval","_bottomBGYInteval","_bottomBGScroll","Boolean","_leftOrRight","Integer","_stopCreateEnemy","getRunSpeed","scrollSide","dt","offsetY","y","_distance","Math","abs","string","floor","moveBottomBG","director","getWinSize","height","heroJump","getComponent","setLeftOrRight","jump","offsetX","x","Animation","play","moveAction","moveBy","callfuncAction","callFunc","scaleX","run","action","sequence","runAction","onMouseDown","event","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","createEnemy","_enemyTimeInteval","timeInteval","_gameManager","getTimeIntevalWithDistance","enemyInfo","generateEnemy","Global","enemyType","bird","dealWithBird","enemyNode","dart2","dealWithDartEnemy","line","dealWithLine","linecat","dealWithLineCat","shortbarrier","dealWithShortBarrier","longbarrier","dealWithLongBarrier","enemyrun","dealWithRunEnemy","birdNode","parent","targetWorldPos","convertToWorldSpace","v2","setStartSide","setTargetWorldPos","dartEnemyNode","lineEnemyNode","linecatEnemyNode","shortBarrierNode","longBarrierNode","runEnemey","gameOver","onLoad","gameMainScene","node","on","EventType","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","TOUCH_START","TOUCH_MOVE","TOUCH_END","setGameMainScene","start","update"],"mappings":"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","file":"GameMainScene.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["/*\r\n* author:   xinghui\r\n* desc:     GameMainScene\r\n*/\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 英雄节点\r\n        heroNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧英雄位置节点\r\n        leftHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧英雄位置节点\r\n        rightHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧墙体：需要移动\r\n        sideLeft : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧墙体：需要移动\r\n        sideRight : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧敌人节点\r\n        enemyNodeLeft : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧敌人节点\r\n        enemyNodeRight : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 底部背景装饰\r\n        bottomBG : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 分数文字\r\n        scoreLabel : {\r\n            default : null,\r\n            type : cc.Label\r\n        },\r\n        // 两侧墙体向下移动速度，负数\r\n        _runSpeed : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 最大速度\r\n        maxSpeed : {\r\n            default : -250.0,\r\n            type : cc.Float\r\n        },\r\n        // 加速度\r\n        accSpeed : {\r\n            default : -100.0,\r\n            type : cc.Float\r\n        },\r\n        // 开始敌人出现逻辑时，移动的距离，从这个距离开始，通过移动距离判断敌人类型和速度\r\n        _startEnemyDistance : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 两侧墙向下移动距离，因为两侧墙是循环使用的，当达到一个值时，需要重置墙体位置。\r\n        _posYInteval : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 墙体移动此距离后，需要重置，数值要根据墙体资源设置，不然容易走光，哈哈\r\n        maxPosYInteval : {\r\n            default : -128.0,\r\n            type : cc.Float\r\n        },\r\n        // 底部背景移动距离\r\n        _bottomBGYInteval : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 是否可以移动底部背景\r\n        _bottomBGScroll : {\r\n            default : true,\r\n            type : cc.Boolean\r\n        },\r\n        // 英雄在左侧(-1)或者右侧(1)\r\n        _leftOrRight : {\r\n            default : -1,\r\n            type : cc.Integer\r\n        },\r\n        // todo : for test\r\n        _stopCreateEnemy : {\r\n            default : false,\r\n            type : cc.Boolean\r\n        }\r\n    },\r\n\r\n    //************************************start logic*************************************************//\r\n    /*\r\n    *  desc: get the speed of main scene at runtime\r\n    */\r\n    getRunSpeed : function(){\r\n        return this._runSpeed  \r\n    },\r\n    /*\r\n    *  desc: scroll side repeatedly\r\n    */\r\n    scrollSide : function(dt){\r\n        // deal with runing speed\r\n        this._runSpeed += this.accSpeed * dt\r\n        if(this._runSpeed < this.maxSpeed) {\r\n            this._runSpeed = this.maxSpeed\r\n        } \r\n\r\n        // deal with the BG\r\n        var offsetY = this._runSpeed * dt\r\n        this._posYInteval += offsetY;\r\n        if(this._posYInteval < this.maxPosYInteval) {\r\n            this._posYInteval -= this.maxPosYInteval\r\n            this.sideLeft.y -= this.maxPosYInteval      \r\n        }\r\n        this.sideLeft.y += offsetY\r\n        this.sideRight.y = this.sideLeft.y\r\n\r\n        // deal with the total distance and the score\r\n        this._distance += Math.abs(offsetY / 3.0)\r\n        this.scoreLabel.string = Math.floor(this._distance)\r\n    },\r\n    /*\r\n    *  desc: move the Bottom BG\r\n    */\r\n    moveBottomBG : function(dt) {\r\n        if(this._bottomBGScroll){\r\n            var offsetY = this._runSpeed * dt\r\n            this.bottomBG.y += offsetY\r\n\r\n            this._bottomBGYInteval += offsetY\r\n            // bottom bg can stop\r\n            if(Math.abs(this._bottomBGYInteval) > cc.director.getWinSize().height / 2.0)\r\n            {\r\n                this._bottomBGScroll = false\r\n                this._startEnemyDistance = this._distance\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *  desc: hero jump from oneside to another\r\n    */\r\n    heroJump : function(){\r\n        // change the side\r\n        this._leftOrRight *= (-1)\r\n        this.heroNode.getComponent(\"Hero\").setLeftOrRight(this._leftOrRight)\r\n        this.heroNode.getComponent(\"Hero\").jump()\r\n        var offsetX = this.rightHeroPosNode.x - this.leftHeroPosNode.x\r\n        offsetX *= this._leftOrRight \r\n        this.heroNode.getComponent(cc.Animation).play(\"HeroJumpClip\")\r\n\r\n        var moveAction = cc.moveBy(0.33, offsetX, 0)\r\n        var callfuncAction = cc.callFunc(\r\n            function(){\r\n                this.heroNode.scaleX *= (-1)\r\n                this.heroNode.getComponent(\"Hero\").run()\r\n                this.heroNode.getComponent(cc.Animation).play(\"HeroRunClip\")\r\n            }, this\r\n        )\r\n        var action = cc.sequence(moveAction, callfuncAction)\r\n        this.heroNode.runAction(action)\r\n    },\r\n    onMouseDown : function(event){\r\n\r\n    },\r\n    onMouseMove : function(event){\r\n\r\n    },\r\n    onMouseUp : function(event){\r\n\r\n    },\r\n    onTouchStart : function(event){\r\n        this.heroJump()\r\n    },\r\n    onTouchMove : function(event){\r\n\r\n    }, \r\n    onTouchEnd : function(event){\r\n\r\n    },\r\n    /*\r\n    *  desc: create enemy\r\n    */\r\n    createEnemy : function(dt){\r\n        // bottom bg must stop\r\n        if(this._bottomBGScroll || this._stopCreateEnemy){\r\n            return\r\n        }\r\n\r\n        this._enemyTimeInteval += dt\r\n        \r\n        var timeInteval = this._gameManager.getTimeIntevalWithDistance(this._distance - this._startEnemyDistance)\r\n        if(this._enemyTimeInteval >= timeInteval){\r\n            this._enemyTimeInteval -= timeInteval\r\n            var enemyInfo = this._gameManager.generateEnemy(this._distance - this._startEnemyDistance)\r\n            if(enemyInfo){\r\n                if(enemyInfo.type === Global.enemyType.bird) {\r\n                    this.dealWithBird(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.dart2) {\r\n                    this.dealWithDartEnemy(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.line){\r\n                    this.dealWithLine(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.linecat){\r\n                    this.dealWithLineCat(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.shortbarrier){\r\n                    this.dealWithShortBarrier(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.longbarrier){\r\n                    this.dealWithLongBarrier(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.enemyrun){\r\n                    this.dealWithRunEnemy(enemyInfo.enemyNode)\r\n                }\r\n                // todo : for test\r\n                this._stopCreateEnemy = false\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *  desc: dealWithBird\r\n    */\r\n    dealWithBird : function(birdNode){\r\n        birdNode.parent = (this._leftOrRight > 0) ? this.enemyNodeLeft : this.enemyNodeRight\r\n        var targetWorldPos = (this._leftOrRight > 0) ? this.rightHeroPosNode.convertToWorldSpace(cc.v2(0, 0)) : this.leftHeroPosNode.convertToWorldSpace(cc.v2(0, 0))\r\n        birdNode.scaleX *= this._leftOrRight\r\n        birdNode.getComponent(\"Bird\").setStartSide(-this._leftOrRight)\r\n        birdNode.getComponent(\"Bird\").setTargetWorldPos(targetWorldPos)\r\n    },\r\n    /*\r\n    *  desc: dealWithDartEnemy\r\n    */\r\n    dealWithDartEnemy : function(dartEnemyNode){\r\n        dartEnemyNode.parent = (this._leftOrRight > 0) ? this.enemyNodeLeft : this.enemyNodeRight\r\n        var targetWorldPos = (this._leftOrRight > 0) ? this.rightHeroPosNode.convertToWorldSpace(cc.v2(0, 0)) : this.leftHeroPosNode.convertToWorldSpace(cc.v2(0, 0))\r\n        dartEnemyNode.scaleX *= this._leftOrRight\r\n        dartEnemyNode.getComponent(\"DartEnemy\").setStartSide(-this._leftOrRight)\r\n        dartEnemyNode.getComponent(\"DartEnemy\").setTargetWorldPos(targetWorldPos)\r\n    },\r\n    /*\r\n    *  desc: dealWithLine\r\n    */\r\n    dealWithLine : function(lineEnemyNode){\r\n        lineEnemyNode.parent = this.enemyNodeLeft\r\n    },\r\n    /*\r\n    *  desc: dealWithLineCat\r\n    */\r\n    dealWithLineCat : function(linecatEnemyNode){\r\n        linecatEnemyNode.parent = this.enemyNodeLeft\r\n    },\r\n    /*\r\n    *  desc: dealWithShortBarrier\r\n    */\r\n    dealWithShortBarrier : function(shortBarrierNode){\r\n        shortBarrierNode.parent = (this._leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        shortBarrierNode.scaleX *= -this._leftOrRight\r\n    },\r\n    /*\r\n    *  desc: dealWithLongBarrier\r\n    */\r\n    dealWithLongBarrier : function(longBarrierNode){\r\n        longBarrierNode.parent = (this._leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        longBarrierNode.scaleX *= -this._leftOrRight\r\n    },\r\n    /*\r\n    *  desc: dealWithRunEnemy\r\n    */\r\n    dealWithRunEnemy : function(runEnemey){\r\n        runEnemey.parent = (this._leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        runEnemey.scaleX *= (-this._leftOrRight)\r\n    },\r\n\r\n    /*\r\n    *  desc: gameOver\r\n    */\r\n    gameOver : function(){  \r\n        this._gameManager.gameOver()\r\n    },\r\n    //*******************************end logic******************************************************//\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n        Global.gameMainScene = this\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this)\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this)\r\n        this.node.on(cc.Node.EventType.MOUSE_UP, this.onMouseUp, this)\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n\r\n        this.node.on(\"MSG_GameOver\", this.gameOver, this)\r\n\r\n        this._gameManager = this.getComponent(\"GameManager\")\r\n        this.heroNode.getComponent(\"Hero\").setGameMainScene(this)\r\n    },\r\n\r\n    start () {\r\n        this._leftOrRight = -1\r\n        this._distance = 0\r\n        this._enemyTimeInteval = 0.0\r\n    },\r\n\r\n    update (dt) {\r\n        this.scrollSide(dt)\r\n        this.moveBottomBG(dt)\r\n        this.createEnemy(dt)\r\n    },\r\n});\r\n"]}