{"version":3,"sources":["GameMainScene.js"],"names":["cc","Class","extends","Component","properties","heroNode","default","type","Node","leftHeroPosNode","rightHeroPosNode","centerHeroPosNode","sideLeft","sideRight","enemyNodeLeft","enemyNodeRight","bottomBG","scoreLabel","Label","_runSpeed","Float","maxSpeed","addSpecialMaxSpeed","accSpeed","deadEnemyNodes","_startEnemyDistance","_posYInteval","maxPosYInteval","_heroRunDistance","_bottomBGScroll","Boolean","_enemyTimeInteval","_stopCreateEnemy","calculateSpeed","dt","addMaxSpeed","_oldMaxSpeed","subMaxSpeed","getRunSpeed","scrollSide","offsetY","y","string","Math","floor","abs","moveBottomBG","winSize","height","heroJump","Global","hero","jumpFromSideToSide","onMouseDown","event","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","createEnemy","timeInteval","gameManager","getTimeIntevalWithDistance","enemyInfo","generateEnemy","enemyType","bird","dealWithBird","enemyNode","dart2","dealWithDartEnemy","line","dealWithLine","linecat","dealWithLineCat","shortbarrier","dealWithShortBarrier","longbarrier","dealWithLongBarrier","enemyrun","dealWithRunEnemy","circleprop","dealWithCircleProp","birdNode","leftOrRight","getLeftOrRight","parent","targetWorldPos","convertToWorldSpace","v2","scaleX","getComponent","setStartSide","setTargetWorldPos","dartEnemyNode","lineEnemyNode","linecatEnemyNode","shortBarrierNode","longBarrierNode","runEnemey","circleProp","showDeadEnemyNode","enemyNodeType","_deadEnemy","collectOldDeadEnemy","deadCount","node","stopAllActions","setPosition","setInvincible","refreshDeadEnemyShow","i","length","DisplayDeadEnemyState","collectEnemy","generateEnemyNodeByNodeType","push","gameOver","director","loadScene","registHandler","on","EventType","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","TOUCH_START","TOUCH_MOVE","TOUCH_END","onLoad","gameMainScene","start","update"],"mappings":"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","file":"GameMainScene.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["/*\r\n* author:   xinghui\r\n* desc:     GameMainScene\r\n*/\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 英雄节点\r\n        heroNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧英雄位置节点\r\n        leftHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧英雄位置节点\r\n        rightHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 中间英雄节点\r\n        centerHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧墙体：需要移动\r\n        sideLeft : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧墙体：需要移动\r\n        sideRight : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧敌人节点\r\n        enemyNodeLeft : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧敌人节点\r\n        enemyNodeRight : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 底部背景装饰\r\n        bottomBG : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 分数文字\r\n        scoreLabel : {\r\n            default : null,\r\n            type : cc.Label\r\n        },\r\n        // 两侧墙体向下移动速度，负数\r\n        _runSpeed : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 最大速度，负数\r\n        maxSpeed : {\r\n            default : -250.0,\r\n            type : cc.Float\r\n        },\r\n        // 特殊效果需要加速时，增加的最大速度\r\n        addSpecialMaxSpeed : {\r\n            default : -250.0,\r\n            type : cc.Float\r\n        },\r\n        // 加速度，负数\r\n        accSpeed : {\r\n            default : -100.0,\r\n            type : cc.Float\r\n        },\r\n        // 死亡敌人的父节点\r\n        deadEnemyNodes : [cc.Node],\r\n        // 开始敌人出现逻辑时，移动的距离，从这个距离开始，通过移动距离判断敌人类型和速度\r\n        _startEnemyDistance : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 两侧墙向下移动距离，因为两侧墙是循环使用的，当达到一个值时，需要重置墙体位置。\r\n        _posYInteval : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 墙体移动此距离后，需要重置，数值要根据墙体资源设置，不然容易走光，哈哈\r\n        maxPosYInteval : {\r\n            default : -128.0,\r\n            type : cc.Float\r\n        },\r\n        // 英雄移动距离\r\n        _heroRunDistance : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 是否可以移动底部背景\r\n        _bottomBGScroll : {\r\n            default : true,\r\n            type : cc.Boolean\r\n        },\r\n        // 出现一次英雄后经过的时间\r\n        _enemyTimeInteval : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // todo : for test\r\n        _stopCreateEnemy : {\r\n            default : false,\r\n            type : cc.Boolean\r\n        },\r\n        \r\n    },\r\n\r\n    //************************************start logic*************************************************//\r\n    calculateSpeed : function(dt){\r\n        // deal with runing speed\r\n        if(this._runSpeed <= this.maxSpeed) {\r\n            this._runSpeed = this.maxSpeed\r\n        }else{\r\n            this._runSpeed += this.accSpeed * dt\r\n        }\r\n    },\r\n    /**\r\n     * desc: 增加额外的快速效果\r\n     */\r\n    addMaxSpeed : function(){\r\n        this._oldMaxSpeed = this.maxSpeed\r\n        this.maxSpeed += this.addSpecialMaxSpeed\r\n        this._runSpeed = this.maxSpeed\r\n    },\r\n    /**\r\n     * desc: 移除额外的快速效果\r\n     */\r\n    subMaxSpeed : function(){\r\n        this.maxSpeed = this._oldMaxSpeed\r\n        this._runSpeed = this.maxSpeed\r\n    },\r\n    /*\r\n    *  desc: get the speed of main scene at runtime\r\n    */\r\n    getRunSpeed : function(){\r\n        return this._runSpeed  \r\n    },\r\n    /*\r\n    *  desc: scroll side repeatedly\r\n    */\r\n    scrollSide : function(dt){\r\n        // deal with the BG\r\n        var offsetY = this._runSpeed * dt\r\n        this._posYInteval += offsetY;\r\n        if(this._posYInteval < this.maxPosYInteval) {\r\n            this._posYInteval -= this.maxPosYInteval\r\n            this.sideLeft.y -= this.maxPosYInteval      \r\n        }\r\n        this.sideLeft.y += offsetY\r\n        this.sideRight.y = this.sideLeft.y\r\n\r\n        // deal with the total distance and the score\r\n        this._heroRunDistance += offsetY\r\n        this.scoreLabel.string = Math.floor(Math.abs(this._heroRunDistance * 0.33))\r\n    },\r\n    /*\r\n    *  desc: move the Bottom BG\r\n    */\r\n    moveBottomBG : function(dt) {\r\n        if(this._bottomBGScroll){\r\n            var offsetY = this._runSpeed * dt\r\n            this.bottomBG.y += offsetY\r\n\r\n            // bottom bg can stop\r\n            if(Math.abs(this._heroRunDistance) > cc.winSize.height * 0.5)\r\n            {\r\n                this._bottomBGScroll = false\r\n                this._startEnemyDistance = this._heroRunDistance\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *  desc: hero jump from oneside to another\r\n    */\r\n    heroJump : function(){\r\n        Global.hero.jumpFromSideToSide()\r\n    },\r\n    onMouseDown : function(event){\r\n\r\n    },\r\n    onMouseMove : function(event){\r\n\r\n    },\r\n    onMouseUp : function(event){\r\n\r\n    },\r\n    onTouchStart : function(event){\r\n        this.heroJump()\r\n    },\r\n    onTouchMove : function(event){\r\n\r\n    }, \r\n    onTouchEnd : function(event){\r\n\r\n    },\r\n    /*\r\n    *  desc: create enemy\r\n    */\r\n    createEnemy : function(dt){\r\n        // bottom bg must stop\r\n        if(this._bottomBGScroll || this._stopCreateEnemy){\r\n            return\r\n        }\r\n\r\n        this._enemyTimeInteval += dt\r\n        \r\n        var timeInteval = Global.gameManager.getTimeIntevalWithDistance(this._heroRunDistance - this._startEnemyDistance)\r\n        if(this._enemyTimeInteval >= timeInteval){\r\n            this._enemyTimeInteval -= timeInteval\r\n            var enemyInfo = Global.gameManager.generateEnemy(this._heroRunDistance - this._startEnemyDistance)\r\n            if(enemyInfo){\r\n                if(enemyInfo.type === Global.enemyType.bird) {\r\n                    this.dealWithBird(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.dart2) {\r\n                    this.dealWithDartEnemy(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.line){\r\n                    this.dealWithLine(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.linecat){\r\n                    this.dealWithLineCat(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.shortbarrier){\r\n                    this.dealWithShortBarrier(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.longbarrier){\r\n                    this.dealWithLongBarrier(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.enemyrun){\r\n                    this.dealWithRunEnemy(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.circleprop){\r\n                    this.dealWithCircleProp(enemyInfo.enemyNode)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *  desc: dealWithBird\r\n    */\r\n    dealWithBird : function(birdNode){\r\n        var leftOrRight = Global.hero.getLeftOrRight()\r\n        birdNode.parent = (leftOrRight > 0) ? this.enemyNodeLeft : this.enemyNodeRight\r\n        var targetWorldPos = (leftOrRight > 0) ? this.rightHeroPosNode.convertToWorldSpace(cc.v2(0, 0)) : this.leftHeroPosNode.convertToWorldSpace(cc.v2(0, 0))\r\n        birdNode.scaleX *= leftOrRight\r\n        birdNode.getComponent(\"Bird\").setStartSide(-leftOrRight)\r\n        birdNode.getComponent(\"Bird\").setTargetWorldPos(targetWorldPos)\r\n    },\r\n    /*\r\n    *  desc: dealWithDartEnemy\r\n    */\r\n    dealWithDartEnemy : function(dartEnemyNode){\r\n        var leftOrRight = Global.hero.getLeftOrRight()\r\n\r\n        dartEnemyNode.parent = (leftOrRight > 0) ? this.enemyNodeLeft : this.enemyNodeRight\r\n        var targetWorldPos = (leftOrRight > 0) ? this.rightHeroPosNode.convertToWorldSpace(cc.v2(0, 0)) : this.leftHeroPosNode.convertToWorldSpace(cc.v2(0, 0))\r\n        dartEnemyNode.scaleX *= leftOrRight\r\n        dartEnemyNode.getComponent(\"DartEnemy\").setStartSide(-leftOrRight)\r\n        dartEnemyNode.getComponent(\"DartEnemy\").setTargetWorldPos(targetWorldPos)\r\n    },\r\n    /*\r\n    *  desc: dealWithLine\r\n    */\r\n    dealWithLine : function(lineEnemyNode){\r\n        lineEnemyNode.parent = this.enemyNodeLeft\r\n    },\r\n    /*\r\n    *  desc: dealWithLineCat\r\n    */\r\n    dealWithLineCat : function(linecatEnemyNode){\r\n        linecatEnemyNode.parent = this.enemyNodeLeft\r\n    },\r\n    /*\r\n    *  desc: dealWithShortBarrier\r\n    */\r\n    dealWithShortBarrier : function(shortBarrierNode){\r\n        var leftOrRight = Global.hero.getLeftOrRight()\r\n\r\n        shortBarrierNode.parent = (leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        shortBarrierNode.scaleX *= -leftOrRight\r\n    },\r\n    /*\r\n    *  desc: dealWithLongBarrier\r\n    */\r\n    dealWithLongBarrier : function(longBarrierNode){\r\n        var leftOrRight = Global.hero.getLeftOrRight()\r\n        longBarrierNode.parent = (leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        longBarrierNode.scaleX *= -leftOrRight\r\n    },\r\n    /*\r\n    *  desc: dealWithRunEnemy\r\n    */\r\n    dealWithRunEnemy : function(runEnemey){\r\n        var leftOrRight = Global.hero.getLeftOrRight()\r\n        runEnemey.parent = (leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        runEnemey.scaleX *= (-leftOrRight)\r\n    },\r\n\r\n    dealWithCircleProp : function(circleProp){\r\n        var leftOrRight = Global.hero.getLeftOrRight()\r\n        circleProp.parent = (leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        circleProp.scaleX *= (-leftOrRight)\r\n    },\r\n\r\n    /**\r\n     * desc: collect the dead enemy\r\n     */\r\n    showDeadEnemyNode : function(enemyNodeType){\r\n        if(this._deadEnemy.enemyNodeType !== enemyNodeType){\r\n            this.collectOldDeadEnemy()\r\n            this._deadEnemy.enemyNodeType = enemyNodeType\r\n            this._deadEnemy.deadCount = 1\r\n        }else{\r\n            this._deadEnemy.deadCount += 1\r\n        }\r\n        if(this._deadEnemy.deadCount >= 3){\r\n            Global.hero.node.stopAllActions()\r\n            Global.hero.node.setPosition(0, 0)\r\n            Global.hero.setInvincible(true, this._deadEnemy.enemyNodeType)\r\n            this.collectOldDeadEnemy()\r\n            this._deadEnemy.deadCount = 0\r\n            this._deadEnemy.enemyNodeType = \"none\"\r\n        }else{\r\n            this.refreshDeadEnemyShow()\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: collect the old dead enemy node\r\n     */\r\n    collectOldDeadEnemy : function(){\r\n        for(let i = 0; i < this._deadEnemy.enemyNode.length; ++i){\r\n            this._deadEnemy.enemyNode[i].getComponent(\"Enemy\").DisplayDeadEnemyState(false)\r\n            Global.gameManager.collectEnemy(this._deadEnemy.enemyNode[i], this._deadEnemy.enemyNodeType)\r\n        }\r\n        this._deadEnemy.enemyNode = []\r\n    },\r\n\r\n    /**\r\n     * desc: refresh the dead enemy show\r\n     */\r\n    refreshDeadEnemyShow : function(){\r\n        var enemyNode = Global.gameManager.generateEnemyNodeByNodeType(this._deadEnemy.enemyNodeType)\r\n        if(enemyNode){\r\n            enemyNode.parent = this.deadEnemyNodes[this._deadEnemy.deadCount - 1]\r\n            enemyNode.getComponent(\"Enemy\").DisplayDeadEnemyState(true)\r\n            this._deadEnemy.enemyNode.push(enemyNode)\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  desc: gameOver\r\n    */\r\n    gameOver : function(){  \r\n        Global.gameManager.gameOver()\r\n        cc.director.loadScene(\"GameStartScene\")\r\n    },\r\n\r\n    /**\r\n     * desc: register the handler\r\n     */\r\n    registHandler : function(){\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this)\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this)\r\n        this.node.on(cc.Node.EventType.MOUSE_UP, this.onMouseUp, this)\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n\r\n        this.node.on(\"MSG_GameOver\", this.gameOver, this)\r\n    },\r\n    //*******************************end logic******************************************************//\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n        Global.gameMainScene = this\r\n        Global.gameManager = this.getComponent(\"GameManager\")\r\n        Global.hero = this.heroNode.getComponent(\"Hero\")\r\n    },\r\n\r\n    start () {\r\n        this._bottomBGScroll = true\r\n        this._startEnemyDistance = 0.0\r\n        this._posYInteval = 0.0\r\n        this._runSpeed = 0.0\r\n        this._heroRunDistance = 0\r\n        this._enemyTimeInteval = 0.0\r\n        this._oldMaxSpeed = 0.0\r\n        this._deadEnemy = {\r\n            enemyNodeType : \"none\",\r\n            deadCount : 0,\r\n            enemyNode : []\r\n        }\r\n        this.registHandler()\r\n    },\r\n\r\n    update (dt) {\r\n        this.calculateSpeed(dt)\r\n        this.scrollSide(dt)\r\n        this.moveBottomBG(dt)\r\n        this.createEnemy(dt)\r\n    },\r\n});\r\n"]}