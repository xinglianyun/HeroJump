{"version":3,"sources":["GameMainScene.js"],"names":["Global","require","cc","Class","extends","Component","properties","heroNode","default","type","Node","leftHeroPosNode","rightHeroPosNode","sideLeft","sideRight","enemyNodeLeft","enemyNodeRight","bottomBG","scoreLabel","Label","_runSpeed","Float","maxSpeed","accSpeed","_startEnemyDistance","_posYInteval","maxPosYInteval","_bottomBGYInteval","_bottomBGScroll","Boolean","_leftOrRight","Integer","_stopCreateEnemy","getRunSpeed","scrollSide","dt","offsetY","y","_distance","Math","abs","string","floor","moveBottomBG","director","getWinSize","height","heroJump","getComponent","setLeftOrRight","jump","offsetX","x","Animation","play","moveAction","moveBy","callfuncAction","callFunc","scaleX","run","action","sequence","runAction","onMouseDown","event","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","createEnemy","_enemyTimeInteval","timeInteval","_gameManager","getTimeIntevalWithDistance","enemyInfo","generateEnemy","dealWithBird","enemyNode","dealWithDartEnemy","birdNode","parent","targetWorldPos","convertToWorldSpace","v2","setStartSide","setTargetWorldPos","setGameManager","dartEnemyNode","gameOver","onLoad","gameMainScene","node","on","EventType","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","TOUCH_START","TOUCH_MOVE","TOUCH_END","setGameMainScene","start","update"],"mappings":"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","file":"GameMainScene.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nvar Global = require(\"Global\")\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        heroNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        leftHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        rightHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        sideLeft : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        sideRight : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        enemyNodeLeft : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        enemyNodeRight : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        bottomBG : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        scoreLabel : {\r\n            default : null,\r\n            type : cc.Label\r\n        },\r\n        _runSpeed : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        maxSpeed : {\r\n            default : -250.0,\r\n            type : cc.Float\r\n        },\r\n        accSpeed : {\r\n            default : -100.0,\r\n            type : cc.Float\r\n        },\r\n        _startEnemyDistance : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        _posYInteval : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        maxPosYInteval : {\r\n            default : -128.0,\r\n            type : cc.Float\r\n        },\r\n        _bottomBGYInteval : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        _bottomBGScroll : {\r\n            default : true,\r\n            type : cc.Boolean\r\n        },\r\n        _leftOrRight : {\r\n            default : -1,\r\n            type : cc.Integer\r\n        },\r\n        // todo : for test\r\n        _stopCreateEnemy : {\r\n            default : false,\r\n            type : cc.Boolean\r\n        }\r\n    },\r\n\r\n    // logic area\r\n    getRunSpeed : function(){\r\n        return this._runSpeed  \r\n    },\r\n    // scroll side repeatedly\r\n    scrollSide : function(dt){\r\n        this._runSpeed += this.accSpeed * dt\r\n        if(this._runSpeed < this.maxSpeed) {\r\n            this._runSpeed = this.maxSpeed\r\n        } \r\n\r\n        var offsetY = this._runSpeed * dt\r\n        this._posYInteval += offsetY;\r\n\r\n        if(this._posYInteval < this.maxPosYInteval) {\r\n            this._posYInteval -= this.maxPosYInteval\r\n            this.sideLeft.y -= this.maxPosYInteval      \r\n        }\r\n        this.sideLeft.y += offsetY\r\n        this.sideRight.y = this.sideLeft.y\r\n\r\n        this._distance += Math.abs(offsetY / 3.0)\r\n        this.scoreLabel.string = Math.floor(this._distance)\r\n    },\r\n    // move the Bottom BG\r\n    moveBottomBG : function(dt) {\r\n        if(this._bottomBGScroll){\r\n            var offsetY = this._runSpeed * dt\r\n            this.bottomBG.y += offsetY\r\n\r\n            this._bottomBGYInteval += offsetY\r\n            if(Math.abs(this._bottomBGYInteval) > cc.director.getWinSize().height / 2.0)\r\n            {\r\n                this._bottomBGScroll = false\r\n                this._startEnemyDistance = this._distance\r\n            }\r\n        }\r\n        \r\n    },\r\n    heroJump : function(){\r\n        this._leftOrRight *= (-1)\r\n        this.heroNode.getComponent(\"Hero\").setLeftOrRight(this._leftOrRight)\r\n        this.heroNode.getComponent(\"Hero\").jump()\r\n        var offsetX = this.rightHeroPosNode.x - this.leftHeroPosNode.x\r\n        offsetX *= this._leftOrRight \r\n        this.heroNode.getComponent(cc.Animation).play(\"HeroJumpClip\")\r\n\r\n        var moveAction = cc.moveBy(0.33, offsetX, 0)\r\n        var callfuncAction = cc.callFunc(\r\n            function(){\r\n                this.heroNode.scaleX *= (-1)\r\n                this.heroNode.getComponent(\"Hero\").run()\r\n                this.heroNode.getComponent(cc.Animation).play(\"HeroRunClip\")\r\n            }, this\r\n        )\r\n        var action = cc.sequence(moveAction, callfuncAction)\r\n        this.heroNode.runAction(action)\r\n    },\r\n    // mouse event\r\n    onMouseDown : function(event){\r\n\r\n    },\r\n    onMouseMove : function(event){\r\n\r\n    },\r\n    onMouseUp : function(event){\r\n\r\n    },\r\n    // touch event\r\n    onTouchStart : function(event){\r\n        this.heroJump()\r\n    },\r\n    onTouchMove : function(event){\r\n\r\n    }, \r\n    onTouchEnd : function(event){\r\n\r\n    },\r\n\r\n    createEnemy : function(dt){\r\n        if(this._bottomBGScroll || this._stopCreateEnemy){\r\n            return\r\n        }\r\n\r\n        this._enemyTimeInteval += dt\r\n        \r\n        var timeInteval = this._gameManager.getTimeIntevalWithDistance(this._distance - this._startEnemyDistance)\r\n        if(this._enemyTimeInteval >= timeInteval){\r\n            this._enemyTimeInteval -= timeInteval\r\n            var enemyInfo = this._gameManager.generateEnemy(this._distance - this._startEnemyDistance)\r\n            if(enemyInfo){\r\n                if(enemyInfo.type === \"bird\") {\r\n                    this.dealWithBird(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type == \"dart2\") {\r\n                    this.dealWithDartEnemy(enemyInfo.enemyNode)\r\n                }\r\n                // todo : for test\r\n                this._stopCreateEnemy = true\r\n            }\r\n        }\r\n    },\r\n\r\n    dealWithBird : function(birdNode){\r\n        birdNode.parent = (this._leftOrRight > 0) ? this.enemyNodeLeft : this.enemyNodeRight\r\n        var targetWorldPos = (this._leftOrRight > 0) ? this.rightHeroPosNode.convertToWorldSpace(cc.v2(0, 0)) : this.leftHeroPosNode.convertToWorldSpace(cc.v2(0, 0))\r\n        birdNode.scaleX *= this._leftOrRight\r\n        birdNode.getComponent(\"Bird\").setStartSide(-this._leftOrRight)\r\n        birdNode.getComponent(\"Bird\").setTargetWorldPos(targetWorldPos)\r\n        birdNode.getComponent(\"Bird\").setGameManager(this._gameManager)\r\n    },\r\n    dealWithDartEnemy : function(dartEnemyNode){\r\n        dartEnemyNode.parent = (this._leftOrRight > 0) ? this.enemyNodeLeft : this.enemyNodeRight\r\n        var targetWorldPos = (this._leftOrRight > 0) ? this.rightHeroPosNode.convertToWorldSpace(cc.v2(0, 0)) : this.leftHeroPosNode.convertToWorldSpace(cc.v2(0, 0))\r\n        birdNode.scaleX *= this._leftOrRight\r\n        birdNode.getComponent(\"DartEnemy\").setStartSide(-this._leftOrRight)\r\n        birdNode.getComponent(\"DartEnemy\").setTargetWorldPos(targetWorldPos)\r\n        birdNode.getComponent(\"DartEnemy\").setGameManager(this._gameManager)\r\n    },\r\n\r\n    //\r\n    gameOver : function(){  \r\n        this._gameManager.gameOver()\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n        Global.gameMainScene = this\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this)\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this)\r\n        this.node.on(cc.Node.EventType.MOUSE_UP, this.onMouseUp, this)\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n\r\n        this.node.on(\"MSG_GameOver\", this.gameOver, this)\r\n\r\n        this._gameManager = this.getComponent(\"GameManager\")\r\n        this.heroNode.getComponent(\"Hero\").setGameMainScene(this)\r\n    },\r\n\r\n    start () {\r\n        this._leftOrRight = -1\r\n        this._distance = 0\r\n        this._enemyTimeInteval = 0.0\r\n    },\r\n\r\n    update (dt) {\r\n        this.scrollSide(dt)\r\n        this.moveBottomBG(dt)\r\n        this.createEnemy(dt)\r\n    },\r\n});\r\n"]}