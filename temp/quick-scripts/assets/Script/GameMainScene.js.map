{"version":3,"sources":["GameMainScene.js"],"names":["cc","Class","extends","Component","properties","heroNode","default","type","Node","leftHeroPosNode","rightHeroPosNode","centerHeroPosNode","sideLeft","sideRight","enemyNodeLeft","enemyNodeRight","bottomBG","scoreLabel","Label","_runSpeed","Float","maxSpeed","accSpeed","_startEnemyDistance","_posYInteval","maxPosYInteval","_bottomBGYInteval","_bottomBGScroll","Boolean","_leftOrRight","Integer","_stopCreateEnemy","deadEnemyNodes","getRunSpeed","scrollSide","dt","offsetY","y","_distance","Math","abs","string","floor","moveBottomBG","director","getWinSize","height","heroJump","getComponent","setLeftOrRight","jump","offsetX","x","Animation","play","moveAction","moveBy","callfuncAction","callFunc","scaleX","run","action","sequence","runAction","onMouseDown","event","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","createEnemy","_enemyTimeInteval","timeInteval","_gameManager","getTimeIntevalWithDistance","enemyInfo","generateEnemy","Global","enemyType","bird","dealWithBird","enemyNode","dart2","dealWithDartEnemy","line","dealWithLine","linecat","dealWithLineCat","shortbarrier","dealWithShortBarrier","longbarrier","dealWithLongBarrier","enemyrun","dealWithRunEnemy","circleprop","dealWithCircleProp","birdNode","parent","onInit","targetWorldPos","convertToWorldSpace","v2","setStartSide","setTargetWorldPos","dartEnemyNode","lineEnemyNode","linecatEnemyNode","shortBarrierNode","longBarrierNode","runEnemey","circleProp","showDeadEnemyNode","_deadEnemy","collectOldDeadEnemy","deadCount","hero","setInvincible","refreshDeadEnemyShow","i","length","collectEnemy","enemy","generateEnemyByType","DisplayDeadEnemyState","gameOver","loadScene","onLoad","gameMainScene","node","on","EventType","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","TOUCH_START","TOUCH_MOVE","TOUCH_END","start","update"],"mappings":"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","file":"GameMainScene.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["/*\r\n* author:   xinghui\r\n* desc:     GameMainScene\r\n*/\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 英雄节点\r\n        heroNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧英雄位置节点\r\n        leftHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧英雄位置节点\r\n        rightHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 中间英雄节点\r\n        centerHeroPosNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧墙体：需要移动\r\n        sideLeft : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧墙体：需要移动\r\n        sideRight : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 左侧敌人节点\r\n        enemyNodeLeft : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 右侧敌人节点\r\n        enemyNodeRight : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 底部背景装饰\r\n        bottomBG : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 分数文字\r\n        scoreLabel : {\r\n            default : null,\r\n            type : cc.Label\r\n        },\r\n        // 两侧墙体向下移动速度，负数\r\n        _runSpeed : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 最大速度\r\n        maxSpeed : {\r\n            default : -250.0,\r\n            type : cc.Float\r\n        },\r\n        // 加速度\r\n        accSpeed : {\r\n            default : -100.0,\r\n            type : cc.Float\r\n        },\r\n        // 开始敌人出现逻辑时，移动的距离，从这个距离开始，通过移动距离判断敌人类型和速度\r\n        _startEnemyDistance : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 两侧墙向下移动距离，因为两侧墙是循环使用的，当达到一个值时，需要重置墙体位置。\r\n        _posYInteval : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 墙体移动此距离后，需要重置，数值要根据墙体资源设置，不然容易走光，哈哈\r\n        maxPosYInteval : {\r\n            default : -128.0,\r\n            type : cc.Float\r\n        },\r\n        // 底部背景移动距离\r\n        _bottomBGYInteval : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },\r\n        // 是否可以移动底部背景\r\n        _bottomBGScroll : {\r\n            default : true,\r\n            type : cc.Boolean\r\n        },\r\n        // 英雄在左侧(-1)或者右侧(1)\r\n        _leftOrRight : {\r\n            default : -1,\r\n            type : cc.Integer\r\n        },\r\n        // todo : for test\r\n        _stopCreateEnemy : {\r\n            default : false,\r\n            type : cc.Boolean\r\n        },\r\n        deadEnemyNodes : [cc.Node]\r\n    },\r\n\r\n    //************************************start logic*************************************************//\r\n    /*\r\n    *  desc: get the speed of main scene at runtime\r\n    */\r\n    getRunSpeed : function(){\r\n        return this._runSpeed  \r\n    },\r\n    /*\r\n    *  desc: scroll side repeatedly\r\n    */\r\n    scrollSide : function(dt){\r\n        // deal with runing speed\r\n        this._runSpeed += this.accSpeed * dt\r\n        if(this._runSpeed < this.maxSpeed) {\r\n            this._runSpeed = this.maxSpeed\r\n        } \r\n\r\n        // deal with the BG\r\n        var offsetY = this._runSpeed * dt\r\n        this._posYInteval += offsetY;\r\n        if(this._posYInteval < this.maxPosYInteval) {\r\n            this._posYInteval -= this.maxPosYInteval\r\n            this.sideLeft.y -= this.maxPosYInteval      \r\n        }\r\n        this.sideLeft.y += offsetY\r\n        this.sideRight.y = this.sideLeft.y\r\n\r\n        // deal with the total distance and the score\r\n        this._distance += Math.abs(offsetY / 3.0)\r\n        this.scoreLabel.string = Math.floor(this._distance)\r\n    },\r\n    /*\r\n    *  desc: move the Bottom BG\r\n    */\r\n    moveBottomBG : function(dt) {\r\n        if(this._bottomBGScroll){\r\n            var offsetY = this._runSpeed * dt\r\n            this.bottomBG.y += offsetY\r\n\r\n            this._bottomBGYInteval += offsetY\r\n            // bottom bg can stop\r\n            if(Math.abs(this._bottomBGYInteval) > cc.director.getWinSize().height / 2.0)\r\n            {\r\n                this._bottomBGScroll = false\r\n                this._startEnemyDistance = this._distance\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *  desc: hero jump from oneside to another\r\n    */\r\n    heroJump : function(){\r\n        // change the side\r\n        this._leftOrRight *= (-1)\r\n        this.heroNode.getComponent(\"Hero\").setLeftOrRight(this._leftOrRight)\r\n        this.heroNode.getComponent(\"Hero\").jump()\r\n        var offsetX = this.rightHeroPosNode.x - this.leftHeroPosNode.x\r\n        offsetX *= this._leftOrRight \r\n        this.heroNode.getComponent(cc.Animation).play(\"HeroJumpClip\")\r\n\r\n        var moveAction = cc.moveBy(0.33, offsetX, 0)\r\n        var callfuncAction = cc.callFunc(\r\n            function(){\r\n                this.heroNode.scaleX *= (-1)\r\n                this.heroNode.getComponent(\"Hero\").run()\r\n                this.heroNode.getComponent(cc.Animation).play(\"HeroRunClip\")\r\n            }, this\r\n        )\r\n        var action = cc.sequence(moveAction, callfuncAction)\r\n        this.heroNode.runAction(action)\r\n    },\r\n    onMouseDown : function(event){\r\n\r\n    },\r\n    onMouseMove : function(event){\r\n\r\n    },\r\n    onMouseUp : function(event){\r\n\r\n    },\r\n    onTouchStart : function(event){\r\n        this.heroJump()\r\n    },\r\n    onTouchMove : function(event){\r\n\r\n    }, \r\n    onTouchEnd : function(event){\r\n\r\n    },\r\n    /*\r\n    *  desc: create enemy\r\n    */\r\n    createEnemy : function(dt){\r\n        // bottom bg must stop\r\n        if(this._bottomBGScroll || this._stopCreateEnemy){\r\n            return\r\n        }\r\n\r\n        this._enemyTimeInteval += dt\r\n        \r\n        var timeInteval = this._gameManager.getTimeIntevalWithDistance(this._distance - this._startEnemyDistance)\r\n        if(this._enemyTimeInteval >= timeInteval){\r\n            this._enemyTimeInteval -= timeInteval\r\n            var enemyInfo = this._gameManager.generateEnemy(this._distance - this._startEnemyDistance)\r\n            if(enemyInfo){\r\n                if(enemyInfo.type === Global.enemyType.bird) {\r\n                    this.dealWithBird(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.dart2) {\r\n                    this.dealWithDartEnemy(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.line){\r\n                    this.dealWithLine(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.linecat){\r\n                    this.dealWithLineCat(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.shortbarrier){\r\n                    this.dealWithShortBarrier(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.longbarrier){\r\n                    this.dealWithLongBarrier(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.enemyrun){\r\n                    this.dealWithRunEnemy(enemyInfo.enemyNode)\r\n                }else if(enemyInfo.type === Global.enemyType.circleprop){\r\n                    this.dealWithCircleProp(enemyInfo.enemyNode)\r\n                }\r\n                // todo : for test\r\n                //this._stopCreateEnemy = true\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *  desc: dealWithBird\r\n    */\r\n    dealWithBird : function(birdNode){\r\n        birdNode.parent = (this._leftOrRight > 0) ? this.enemyNodeLeft : this.enemyNodeRight\r\n        birdNode.getComponent(\"Bird\").onInit()\r\n\r\n        var targetWorldPos = (this._leftOrRight > 0) ? this.rightHeroPosNode.convertToWorldSpace(cc.v2(0, 0)) : this.leftHeroPosNode.convertToWorldSpace(cc.v2(0, 0))\r\n        birdNode.scaleX *= this._leftOrRight\r\n        birdNode.getComponent(\"Bird\").setStartSide(-this._leftOrRight)\r\n        birdNode.getComponent(\"Bird\").setTargetWorldPos(targetWorldPos)\r\n    },\r\n    /*\r\n    *  desc: dealWithDartEnemy\r\n    */\r\n    dealWithDartEnemy : function(dartEnemyNode){\r\n        dartEnemyNode.parent = (this._leftOrRight > 0) ? this.enemyNodeLeft : this.enemyNodeRight\r\n        var targetWorldPos = (this._leftOrRight > 0) ? this.rightHeroPosNode.convertToWorldSpace(cc.v2(0, 0)) : this.leftHeroPosNode.convertToWorldSpace(cc.v2(0, 0))\r\n        dartEnemyNode.scaleX *= this._leftOrRight\r\n        dartEnemyNode.getComponent(\"DartEnemy\").setStartSide(-this._leftOrRight)\r\n        dartEnemyNode.getComponent(\"DartEnemy\").setTargetWorldPos(targetWorldPos)\r\n    },\r\n    /*\r\n    *  desc: dealWithLine\r\n    */\r\n    dealWithLine : function(lineEnemyNode){\r\n        lineEnemyNode.parent = this.enemyNodeLeft\r\n    },\r\n    /*\r\n    *  desc: dealWithLineCat\r\n    */\r\n    dealWithLineCat : function(linecatEnemyNode){\r\n        linecatEnemyNode.parent = this.enemyNodeLeft\r\n    },\r\n    /*\r\n    *  desc: dealWithShortBarrier\r\n    */\r\n    dealWithShortBarrier : function(shortBarrierNode){\r\n        shortBarrierNode.parent = (this._leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        shortBarrierNode.scaleX *= -this._leftOrRight\r\n    },\r\n    /*\r\n    *  desc: dealWithLongBarrier\r\n    */\r\n    dealWithLongBarrier : function(longBarrierNode){\r\n        longBarrierNode.parent = (this._leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        longBarrierNode.scaleX *= -this._leftOrRight\r\n    },\r\n    /*\r\n    *  desc: dealWithRunEnemy\r\n    */\r\n    dealWithRunEnemy : function(runEnemey){\r\n        runEnemey.parent = (this._leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        runEnemey.scaleX *= (-this._leftOrRight)\r\n    },\r\n\r\n    dealWithCircleProp : function(circleProp){\r\n        circleProp.parent = (this._leftOrRight > 0) ? this.enemyNodeRight : this.enemyNodeLeft\r\n        circleProp.scaleX *= (-this._leftOrRight)\r\n    },\r\n\r\n    /**\r\n     * desc: collect the dead enemy\r\n     */\r\n    showDeadEnemyNode : function(enemyType){\r\n        if(this._deadEnemy.enemyType !== enemyType){\r\n            this.collectOldDeadEnemy()\r\n            this._deadEnemy.enemyType = enemyType\r\n            this._deadEnemy.deadCount = 1\r\n        }else{\r\n            this._deadEnemy.deadCount += 1\r\n        }\r\n        if(this._deadEnemy.deadCount >= 3){\r\n            Global.hero.setInvincible(true, this._deadEnemy.enemyType)\r\n            this.collectOldDeadEnemy()\r\n        }else{\r\n            this.refreshDeadEnemyShow()\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: collect the old dead enemy node\r\n     */\r\n    collectOldDeadEnemy : function(){\r\n        for(let i = 0; i < this._deadEnemy.enemyNode.length; ++i){\r\n            this._gameManager.collectEnemy(this._deadEnemy.enemyNode[i], this._deadEnemy.enemyType)\r\n        }\r\n        this._deadEnemy.enemyNode = []\r\n    },\r\n\r\n    /**\r\n     * desc: refresh the dead enemy show\r\n     */\r\n    refreshDeadEnemyShow : function(){\r\n        var enemy = this._gameManager.generateEnemyByType(this._deadEnemy.enemyType)\r\n        if(enemy && enemy.enemyNode){\r\n            enemy.enemyNode.parent = this.deadEnemyNodes[this._deadEnemy.deadCount - 1]\r\n            enemy.enemyNode.getComponent(\"Enemy\").onInit(true)\r\n            enemy.enemyNode.getComponent(\"Enemy\").DisplayDeadEnemyState()\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  desc: gameOver\r\n    */\r\n    gameOver : function(){  \r\n        cc.director.loadScene(\"GameStartScene\")\r\n    },\r\n    //*******************************end logic******************************************************//\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n        Global.gameMainScene = this\r\n\r\n        this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this)\r\n        this.node.on(cc.Node.EventType.MOUSE_MOVE, this.onMouseMove, this)\r\n        this.node.on(cc.Node.EventType.MOUSE_UP, this.onMouseUp, this)\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this)\r\n\r\n        this.node.on(\"MSG_GameOver\", this.gameOver, this)\r\n\r\n        this._gameManager = this.getComponent(\"GameManager\")\r\n    },\r\n\r\n    start () {\r\n        this._leftOrRight = -1\r\n        this._distance = 0\r\n        this._enemyTimeInteval = 0.0\r\n        this._deadEnemy = {\r\n            enemyType : \"none\",\r\n            deadCount : 0,\r\n            enemyNode : []\r\n        }\r\n    },\r\n\r\n    update (dt) {\r\n        this.scrollSide(dt)\r\n        this.moveBottomBG(dt)\r\n        this.createEnemy(dt)\r\n    },\r\n});\r\n"]}