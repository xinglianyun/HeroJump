{"version":3,"sources":["GameManager.js"],"names":["GameData","require","cc","Class","extends","Component","properties","birdEnemyPrefab","default","type","Prefab","catEnemyPrefab","crakerLongEnemyPrefab","crakerShortEnemyPrefab","dartEnemyPrefab","dartPrefab","runEnemyPrefab","bannerPrefab","circlePropPrefab","_totalTime","Float","onLoad","Global","gameManager","game","addPersistRootNode","Node","director","getCollisionManager","enabled","start","gameOveer","_enemyLevel","_enemyRate","_enemyTotalRate","initEnemyRate","initEnemyPool","update","dt","level","EnemyConfig","length","config","enemyIndex","enemy","rate","_birdEnemyPool","NodePool","_birdPoolCapacity","i","instantiate","put","_catEnemyPool","_catPoolCapacity","_crackerLongEnemyPool","_crackerLongPoolCapacity","_crackerShortEnemyPool","_crackerShortPoolCapacity","_dartEnemyPool","_dartEnemyPoolCapacity","_dartNodePool","_dartNodePoolCapacity","_runEnemyPool","_runEnemyPoolCapacity","_bannerEnemyPool","_bannerEnemyPoolCapacity","_circlePropPool","_circlePropPoolCapacity","prop","generateEnemy","distance","enemyLevel","height","anchor","Math","random","enemyConfig","generateEnemyByType","enemyType","linecat","bird","_createBird","dart2","_createDart2","line","_createLine","_createLineCat","shortbarrier","_createShortBarrier","longbarrier","_createLongBarrier","enemyrun","_createRunEnemy","circleprop","_createCircleProp","setPosition","enemyNode","generateEnemyNodeByNodeType","enemyNodeType","dartnode","_createDartNode","cat","_createCat","runenemy","get","console","log","dartNode","getComponent","addChildDartNode","onInit","addCat","barrier","runEnemy","collectEnemy","node","dartenemy","getTimeIntevalWithDistance","space","gameOver"],"mappings":"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","file":"GameManager.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["/**\r\n * desc     :   game manager contains the Global Varible and some calculate logic\r\n * authur   :   xinghui\r\n */\r\nvar GameData = require(\"GameData\")\r\ncc.Class({\r\n\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        birdEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        catEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        crakerLongEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        crakerShortEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        dartEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        dartPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        runEnemyPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        bannerPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        circlePropPrefab : {\r\n            default : null,\r\n            type : cc.Prefab\r\n        },\r\n        // 游戏运行时间\r\n        _totalTime : {\r\n            default : 0.0,\r\n            type : cc.Float\r\n        },   \r\n    },\r\n    \r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n        Global.gameManager = this\r\n        cc.game.addPersistRootNode(this.Node);\r\n        cc.director.getCollisionManager().enabled = true\r\n    },\r\n\r\n    start () {\r\n        // Game Over\r\n        this.gameOveer = false\r\n        // enemy level\r\n        this._enemyLevel = 0\r\n\r\n        // enemy rate\r\n        this._enemyRate = []\r\n        this._enemyTotalRate = []\r\n        this.initEnemyRate()\r\n\r\n        // enemy pool \r\n        this.initEnemyPool()\r\n        \r\n    },\r\n\r\n    update (dt) {\r\n        this._totalTime += dt;\r\n    },\r\n\r\n    //************************************start logic*************************************************//\r\n    /**\r\n     * desc: calaulate the apperence rate of enemy according to the rate\r\n     *       the varible _enemyTotalRate contains the total rate of the enemys in one level\r\n     *       the _enemyRate contains the seperate rate of the enemys\r\n     */\r\n    initEnemyRate : function(){\r\n        for(let level = 0; level < GameData.EnemyConfig.length; ++level){\r\n            var config = GameData.EnemyConfig[level]\r\n            this._enemyTotalRate[level] = 0\r\n            this._enemyRate[level] = []\r\n            for(let enemyIndex = 0; enemyIndex < config.enemy.length; ++enemyIndex){\r\n                var enemy = config.enemy[enemyIndex]\r\n                this._enemyTotalRate[level] += enemy.rate\r\n                this._enemyRate[level][enemyIndex] = this._enemyTotalRate[level]\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: init all the pool of the enemy\r\n     */\r\n    initEnemyPool : function(){\r\n        this._birdEnemyPool = new cc.NodePool(\"Enemy\")\r\n        this._birdPoolCapacity = 2\r\n        for(let i = 0; i < this._birdPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.birdEnemyPrefab); // bird pool\r\n            this._birdEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._catEnemyPool = new cc.NodePool()\r\n        this._catPoolCapacity = 2\r\n        for(let i = 0; i < this._catPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.catEnemyPrefab); // cat pool\r\n            this._catEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._crackerLongEnemyPool = new cc.NodePool()\r\n        this._crackerLongPoolCapacity = 2\r\n        for(let i = 0; i < this._crackerLongPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.crakerLongEnemyPrefab); // cracker long\r\n            this._crackerLongEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._crackerShortEnemyPool = new cc.NodePool()\r\n        this._crackerShortPoolCapacity = 2\r\n        for(let i = 0; i < this._crackerShortPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.crakerShortEnemyPrefab); // cracker short\r\n            this._crackerShortEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._dartEnemyPool = new cc.NodePool()\r\n        this._dartEnemyPoolCapacity = 2\r\n        for(let i = 0; i < this._dartEnemyPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.dartEnemyPrefab); // dart enemy pool\r\n            this._dartEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._dartNodePool = new cc.NodePool()\r\n        this._dartNodePoolCapacity = 3\r\n        for(let i = 0; i < this._dartNodePoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.dartPrefab); // dart node pool\r\n            this._dartNodePool.put(enemy)\r\n        }\r\n\r\n        this._runEnemyPool = new cc.NodePool()\r\n        this._runEnemyPoolCapacity = 2\r\n        for(let i = 0; i < this._runEnemyPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.runEnemyPrefab); // run enemy pool\r\n            this._runEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._bannerEnemyPool = new cc.NodePool()\r\n        this._bannerEnemyPoolCapacity = 2\r\n        for(let i = 0; i < this._bannerEnemyPoolCapacity; ++i){\r\n            let enemy = cc.instantiate(this.bannerPrefab);// banner enemy pool\r\n            this._bannerEnemyPool.put(enemy)\r\n        }\r\n\r\n        this._circlePropPool = new cc.NodePool()\r\n        this._circlePropPoolCapacity = 2\r\n        for(let i = 0; i < this._circlePropPoolCapacity; ++i){\r\n            let prop = cc.instantiate(this.circlePropPrefab)// circle prop pool\r\n            this._circlePropPool.put(prop)\r\n        }\r\n    },\r\n    /**\r\n     * desc: create enemy according the distance\r\n     */\r\n    generateEnemy : function(distance){\r\n        let enemy = null\r\n        // get config\r\n        var enemyLevel = 0\r\n        for(let level = 0; level < GameData.EnemyConfig.length; ++level){\r\n            var config = GameData.EnemyConfig[level]\r\n            if(distance <= config.height){\r\n                enemyLevel = level\r\n                break\r\n            }\r\n            if(level === GameData.EnemyConfig.length-1){\r\n                enemyLevel = GameData.EnemyConfig.length-1\r\n                break\r\n            }\r\n        }\r\n        \r\n        var anchor = Math.random() * this._enemyTotalRate[enemyLevel]\r\n        for(let enemyIndex = 0; enemyIndex < this._enemyRate[enemyLevel].length; ++enemyIndex){\r\n            if(anchor <= this._enemyRate[enemyLevel][enemyIndex]){\r\n                var enemyConfig = GameData.EnemyConfig[enemyLevel].enemy[enemyIndex]\r\n                enemy = this.generateEnemyByType(enemyConfig.enemyType)\r\n                break\r\n            }\r\n        }\r\n\r\n        return enemy\r\n    },\r\n\r\n    /**\r\n     * desc: create enemy by type\r\n     */\r\n    generateEnemyByType : function(enemyType){\r\n        let enemy = null\r\n        enemyType = Global.enemyType.linecat\r\n        switch(enemyType){\r\n            case Global.enemyType.bird:\r\n                enemy = this._createBird()\r\n                break;\r\n            case Global.enemyType.dart2:\r\n                enemy = this._createDart2()\r\n                break;\r\n            case Global.enemyType.line:\r\n                enemy = this._createLine()\r\n                break;\r\n            case Global.enemyType.linecat:\r\n                enemy = this._createLineCat()\r\n                break;\r\n            case Global.enemyType.shortbarrier:\r\n                enemy = this._createShortBarrier()\r\n                break;\r\n            case Global.enemyType.longbarrier:\r\n                enemy = this._createLongBarrier()            \r\n                break;\r\n            case Global.enemyType.enemyrun:\r\n                enemy = this._createRunEnemy()\r\n                break;\r\n            case Global.enemyType.circleprop:\r\n                enemy = this._createCircleProp()\r\n                break;\r\n        }\r\n        if(enemy){\r\n            enemy.setPosition(0, 0)\r\n        }\r\n        return {enemyNode : enemy, type : enemyType}\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    generateEnemyNodeByNodeType : function(enemyNodeType){\r\n        let enemy = null\r\n        switch(enemyNodeType){\r\n            case Global.enemyNodeType.bird:\r\n                enemy = this._createBird()\r\n                break;\r\n            case Global.enemyNodeType.dartnode:\r\n                enemy = this._createDartNode()\r\n                break;\r\n            case Global.enemyNodeType.cat:\r\n                enemy = this._createCat()\r\n                break;\r\n            case Global.enemyNodeType.runenemy:\r\n                enemy = this._createRunEnemy()\r\n                break;\r\n        }\r\n        if(enemy){\r\n            enemy.setPosition(0, 0)\r\n        }\r\n        return enemy\r\n    },\r\n\r\n    /**\r\n     * desc: create bird\r\n     */\r\n    _createBird : function(){\r\n        let bird = null\r\n        bird = this._birdEnemyPool.get()\r\n        if(!bird){\r\n            bird = cc.instantiate(this.birdEnemyPrefab); \r\n            console.log(\"Game Manager : _createBird, From prfab\")\r\n        }else {\r\n            console.log(\"Game Manager : _createBird, From pool\")\r\n        }\r\n        return bird\r\n    },\r\n    /**\r\n     * desc: create dartenemy with 2 dart \r\n     */\r\n    _createDart2 : function(){\r\n        let dart2 = null\r\n        dart2 = this._dartEnemyPool.get()\r\n        if(!dart2){\r\n            dart2 = cc.instantiate(this.dartEnemyPrefab);\r\n        }\r\n\r\n        for(let i = 0; i < 2; ++i){\r\n            var dartNode = this._dartNodePool.get()\r\n            if(!dartNode){\r\n                dartNode = cc.instantiate(this.dartPrefab)\r\n            }\r\n            dart2.getComponent(\"DartEnemy\").addChildDartNode(dartNode)\r\n        }\r\n\r\n        return dart2\r\n    },\r\n\r\n    /**\r\n     * desc: create dart node\r\n     */\r\n    _createDartNode : function(){\r\n        let dartNode = null\r\n        dartNode = this._dartNodePool.get()\r\n        if(!dartNode){\r\n            dartNode = cc.instantiate(this.dartPrefab)\r\n        }\r\n        return dartnode\r\n    },\r\n\r\n    /**\r\n     * desc: create line alone\r\n     */\r\n    _createLine : function(){\r\n        let line = null\r\n        line = this._bannerEnemyPool.get()\r\n        if(!line){\r\n            line = cc.instantiate(this.bannerPrefab)\r\n        }\r\n        return line\r\n    },\r\n\r\n    /**\r\n     * desc: create line with cat\r\n     */\r\n    _createLineCat : function(){\r\n        var line = this._createLine()\r\n\r\n        let cat = null\r\n        cat = this._catEnemyPool.get()\r\n        if(!cat){\r\n            cat = cc.instantiate(this.catEnemyPrefab)\r\n        }\r\n        cat.getComponent(\"CatEnemy\").onInit()\r\n        line.getComponent(\"LineEnemy\").addCat(cat)\r\n        return line\r\n    },\r\n\r\n    /**\r\n     * desc: create cat\r\n     */\r\n    _createCat : function(){\r\n        let cat = null\r\n        cat = this._catEnemyPool.get()\r\n        if(!cat){\r\n            cat = cc.instantiate(this.catEnemyPrefab)\r\n        }\r\n        return cat\r\n    },\r\n\r\n    /**\r\n     * desc: create short barrier\r\n     */\r\n    _createShortBarrier : function(){\r\n        var barrier = null\r\n        barrier = this._crackerShortEnemyPool.get()\r\n        if(!barrier){\r\n            barrier = cc.instantiate(this.crakerShortEnemyPrefab)\r\n        }\r\n        return barrier\r\n    },\r\n\r\n    /**\r\n     * desc: create long barrier\r\n     */\r\n    _createLongBarrier : function(){\r\n        var barrier = null\r\n        barrier = this._crackerLongEnemyPool.get()\r\n        if(!barrier){\r\n            barrier = cc.instantiate(this.crakerLongEnemyPrefab)\r\n        }\r\n        return barrier\r\n    },\r\n\r\n    /**\r\n     * desc: create run enemy\r\n     */\r\n    _createRunEnemy : function(){\r\n        var runEnemy = null\r\n        runEnemy = this._runEnemyPool.get()\r\n        if(!runEnemy){\r\n            runEnemy = cc.instantiate(this.runEnemyPrefab)\r\n        }\r\n        return runEnemy\r\n    },\r\n\r\n    /**\r\n     * desc: create circle prop\r\n     */\r\n    _createCircleProp : function(){\r\n        var prop = null\r\n        prop = this._circlePropPool.get()\r\n        if(!prop){\r\n            prop = cc.instantiate(this.circlePropPrefab)\r\n        }\r\n        return prop\r\n    },\r\n\r\n    /**\r\n     * desc: re collect the node of no use\r\n     */\r\n    collectEnemy : function(node, type)\r\n    {\r\n        switch(type){\r\n            case Global.enemyNodeType.bird:\r\n                this._birdEnemyPool.put(node)\r\n                break;\r\n            case Global.enemyNodeType.dartenemy:\r\n                this._dartEnemyPool.put(node)\r\n                break;\r\n            case Global.enemyNodeType.dartnode:\r\n                this._dartNodePool.put(node)\r\n                break;\r\n            case Global.enemyNodeType.line:\r\n                this._bannerEnemyPool.put(node)\r\n                break;\r\n            case Global.enemyNodeType.cat:\r\n                this._catEnemyPool.put(node)\r\n                break;\r\n            case Global.enemyNodeType.shortbarrier:\r\n                this._crackerShortEnemyPool.put(node)\r\n                break;\r\n            case Global.enemyNodeType.longbarrier:\r\n                this._crackerLongEnemyPool.put(node)\r\n                break;\r\n            case Global.enemyNodeType.runenemy:\r\n                this._runEnemyPool.put(node)\r\n                break;\r\n            case Global.enemyNodeType.circleprop:\r\n                this._circlePropPool.put(node)\r\n                break;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: get the enenmy appare time inteval accroding the distance\r\n     */\r\n    getTimeIntevalWithDistance : function(distance){\r\n        for(let level = 0; level < GameData.EnemyConfig.length; ++level){\r\n            var config = GameData.EnemyConfig[level]\r\n            if(distance <= config.height)\r\n                return config.space\r\n        }\r\n        return GameData.EnemyConfig[GameData.EnemyConfig.length-1].space\r\n    },\r\n\r\n    /**\r\n     * desc: game over\r\n     */\r\n    gameOver : function(){\r\n        // game over\r\n        \r\n    }\r\n    //************************************start logic*************************************************//\r\n});\r\n"]}