{"version":3,"sources":["Hero.js"],"names":["HeroStatus","cc","Enum","dead","running","jump","fly","Class","extends","Component","properties","colliderProxy","default","type","require","propCenterNode","Node","invincibleTime","Float","onLoad","start","_status","_leftOrRight","setRealListener","_allProps","circleprop","count","circlePropNode","_invincible","_invincibleDurTime","_oldParentNode","update","dt","setInvincible","setLeftOrRight","leftOrRight","getLeftOrRight","run","getComponent","Animation","play","destroy","jumpFromSideToSide","getInvincible","offsetX","Global","gameMainScene","rightHeroPosNode","x","leftHeroPosNode","moveAction","moveBy","callfuncAction","callFunc","node","scaleX","action","sequence","runAction","addProp","propNode","beOnHero","propEnemyType","getPropEnemyType","enemyType","addCircleProp","parent","setPosition","beCollected","deleteCircleProp","beOffHero","setKeepTime","invincible","centerHeroPosNode","enemyNodeType","bird","dartnode","cat","worldPos","convertToWorldSpaceAR","position","nodePos","convertToNodeSpaceAR","onCollisionEnter","other","self","console","log","group","game","groupList","groupIndex","beKilled","beVictory","gameOver","getEnemyNodeType","showDeadEnemyNode"],"mappings":"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","file":"Hero.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// 英雄状态\r\nvar HeroStatus = cc.Enum({\r\n    dead : -1,//死亡，需要collect\r\n    running : -1,//跑\r\n    jump : -1,// 跳\r\n    fly : -1,// 无敌飞行\r\n})\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 碰撞代理组件\r\n        colliderProxy : {\r\n            default : null,\r\n            type : require(\"HeroColliderProxy\")\r\n        },\r\n        // 道具的挂载节点\r\n        propCenterNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        // 无敌时间\r\n        invincibleTime : {\r\n            default : 3.0,\r\n            type : cc.Float\r\n        },\r\n        \r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n    },\r\n\r\n    start () {\r\n        this._status = HeroStatus.running\r\n        this._leftOrRight = -1\r\n        this.colliderProxy.setRealListener(this)\r\n        // hero props\r\n        this._allProps = {\r\n            circleprop : {\r\n                count : 0,\r\n                circlePropNode : null\r\n            }\r\n        }\r\n        // invincible or not\r\n        this._invincible = false\r\n        // invicble time\r\n        this._invincibleDurTime = 0.0\r\n        this._oldParentNode = null\r\n    },\r\n\r\n    update (dt) {\r\n        if(this._invincible){\r\n            this._invincibleDurTime += dt\r\n            if(this._invincibleDurTime >= this.invincibleTime){\r\n                this._invincibleDurTime = 0\r\n                this.setInvincible(false)\r\n            }\r\n        }\r\n    },\r\n\r\n    //************************************start logic*************************************************//\r\n    /**\r\n     * desc: left(-1) or right(1)\r\n     */\r\n    setLeftOrRight : function(leftOrRight){\r\n        this._leftOrRight = leftOrRight\r\n    },\r\n\r\n    /**\r\n     * desc: return left or right\r\n     */\r\n    getLeftOrRight : function(){\r\n        return this._leftOrRight\r\n    },\r\n\r\n    run : function(){\r\n        this._status = HeroStatus.running\r\n        this.getComponent(cc.Animation).play(\"HeroRunClip\")\r\n    },\r\n\r\n    fly : function(){\r\n        this._status = HeroStatus.fly\r\n    },\r\n\r\n    dead : function(){\r\n        this._status = HeroStatus.dead\r\n        if(this._allProps.circleprop.circlePropNode){\r\n            this._allProps.circleprop.circlePropNode.destroy()\r\n            this._allProps.circleprop.count = 0\r\n        }\r\n    },\r\n\r\n\r\n    jumpFromSideToSide : function(){\r\n        if(this.getInvincible()){\r\n            return\r\n        }\r\n\r\n        this._status = HeroStatus.jump\r\n\r\n        this._leftOrRight *= -1\r\n\r\n\r\n        var offsetX = Global.gameMainScene.rightHeroPosNode.x - Global.gameMainScene.leftHeroPosNode.x\r\n        offsetX *= this._leftOrRight \r\n        this.getComponent(cc.Animation).play(\"HeroJumpClip\")\r\n\r\n        var moveAction = cc.moveBy(0.33, offsetX, 0)\r\n        var callfuncAction = cc.callFunc(\r\n            function(){\r\n                this.node.scaleX *= (-1)\r\n                this.run()\r\n            }, this\r\n        )\r\n        var action = cc.sequence(moveAction, callfuncAction)\r\n        this.node.runAction(action)\r\n    },\r\n\r\n    /**\r\n     * desc: add the prop\r\n     */\r\n    addProp : function(propNode){\r\n        propNode.getComponent(\"Prop\").beOnHero()\r\n        var propEnemyType = propNode.getComponent(\"Prop\").getPropEnemyType()\r\n        switch(propEnemyType){\r\n            case Global.enemyType.circleprop:\r\n                this.addCircleProp(propNode)\r\n                break\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: add the circle prop\r\n     */\r\n    addCircleProp(propNode){\r\n        this._allProps.circleprop.count += 1\r\n\r\n        if(!this._allProps.circleprop.circlePropNode){\r\n            propNode.parent = this.propCenterNode\r\n            propNode.setPosition(0, 0)\r\n            this._allProps.circleprop.circlePropNode= propNode\r\n        }else{\r\n            propNode.getComponent(\"Prop\").beCollected()\r\n        }\r\n    },\r\n    /**\r\n     * desc: delete one circle prop\r\n     */\r\n    deleteCircleProp : function(){\r\n        this._allProps.circleprop.count -= 1\r\n        if(this._allProps.circleprop.count <= 0){\r\n            this._allProps.circleprop.count = 0\r\n            if(this._allProps.circleprop.circlePropNode){\r\n                this._allProps.circleprop.circlePropNode.getComponent(\"Prop\").beOffHero()\r\n                this._allProps.circleprop.circlePropNode.getComponent(\"Prop\").beCollected()\r\n                this._allProps.circleprop.circlePropNode = null\r\n            }\r\n        }else{\r\n            this._allProps.circleprop.circlePropNode.getComponent(\"CircleProp\").setKeepTime(0.0)\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: set the hero invincible\r\n     */\r\n    setInvincible : function(invincible, type){\r\n        this._invincible = invincible\r\n        if(invincible){\r\n            this._oldParentNode = this.node.parent\r\n            this.node.parent = Global.gameMainScene.centerHeroPosNode\r\n            switch(type){\r\n                case Global.enemyNodeType.bird:\r\n                    this.getComponent(cc.Animation).play(\"HeroBirdRushClip\")\r\n                    break\r\n                case Global.enemyNodeType.dartnode:\r\n                    this.getComponent(cc.Animation).play(\"HeroDartRushClip\")\r\n                    break\r\n                case Global.enemyNodeType.cat:\r\n                    this.getComponent(cc.Animation).play(\"HeroCatRushClip\")\r\n                    break\r\n            }\r\n        }else{\r\n            this.node.parent = this._oldParentNode\r\n            this.node.scaleX *= -1\r\n            this.node.setPosition(0, 0)\r\n            if(this._leftOrRight === 1){\r\n                var worldPos = Global.gameMainScene.rightHeroPosNode.parent.convertToWorldSpaceAR(Global.gameMainScene.rightHeroPosNode.position)\r\n                var nodePos = Global.gameMainScene.leftHeroPosNode.convertToNodeSpaceAR(worldPos)\r\n                this.node.setPosition(nodePos)\r\n            }\r\n            this.getComponent(cc.Animation).play(\"HeroRunClip\")\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: get the hero invincible\r\n     */\r\n    getInvincible : function(){\r\n        return this._invincible\r\n    },\r\n\r\n    /**\r\n     * desc: 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionEnter: function (other, self) {\r\n        console.log('on collision enter')\r\n        \r\n        if(this._status !== HeroStatus.dead){\r\n            var group = cc.game.groupList[other.node.groupIndex]\r\n            if(group === \"enemy\"){\r\n                if(this._status === HeroStatus.running && !this._invincible){\r\n                    if(this._allProps.circleprop.count > 0){\r\n                        this.deleteCircleProp()\r\n                        other.node.getComponent(\"Enemy\").beKilled()\r\n                    }else{\r\n                        // dead, game oveer\r\n                        this.dead()\r\n                        other.node.getComponent(\"Enemy\").beVictory()\r\n                        Global.gameMainScene.gameOver()\r\n                    }\r\n                }else{\r\n                    var enemyNodeType = other.node.getComponent(\"Enemy\").getEnemyNodeType()\r\n                    Global.gameMainScene.showDeadEnemyNode(enemyNodeType)\r\n                    other.node.getComponent(\"Enemy\").beKilled()\r\n                }\r\n            }else if(group === \"prop\") {\r\n                this.addProp(other.node)\r\n            }\r\n        }\r\n    },\r\n    //************************************end logic*************************************************//\r\n});\r\n"]}