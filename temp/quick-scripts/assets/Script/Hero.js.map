{"version":3,"sources":["Hero.js"],"names":["HeroStatus","cc","Enum","dead","running","jump","fly","Class","extends","Component","properties","colliderProxy","default","type","require","propCenterNode","Node","invincibleTime","Float","onLoad","Global","hero","start","_status","_leftOrRight","setRealListener","_allProps","circleprop","count","circlePropNode","_invincible","_invincibleDurTime","_oldParentNode","update","dt","setInvincible","setLeftOrRight","leftOrRight","getLeftOrRight","run","addProp","propNode","getComponent","beOnHero","propEnemyType","getPropEnemyType","enemyType","addCircleProp","parent","setPosition","deleteCircleProp","beCollected","invincible","node","gameMainScene","centerHeroPosNode","bird","Animation","play","dart2","linecat","getInvincible","onCollisionEnter","other","self","console","log","group","game","groupList","groupIndex","beKilled","gameOver","beVictory"],"mappings":"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","file":"Hero.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// 英雄状态\r\nvar HeroStatus = cc.Enum({\r\n    dead : -1,\r\n    running : -1,\r\n    jump : -1,\r\n    fly : -1,\r\n})\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 碰撞代理组件\r\n        colliderProxy : {\r\n            default : null,\r\n            type : require(\"HeroColliderProxy\")\r\n        },\r\n        propCenterNode : {\r\n            default : null,\r\n            type : cc.Node\r\n        },\r\n        invincibleTime : {\r\n            default : 3.0,\r\n            type : cc.Float\r\n        },\r\n        \r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        Global.hero = this\r\n    },\r\n\r\n    start () {\r\n        this._status = HeroStatus.running\r\n        this._leftOrRight = -1\r\n        this.colliderProxy.setRealListener(this)\r\n        this._allProps = {\r\n            circleprop : {\r\n                count : 0,\r\n                circlePropNode : null\r\n            }\r\n        }\r\n        this._invincible = false\r\n        this._invincibleDurTime = 0.0\r\n        this._oldParentNode = null\r\n    },\r\n\r\n    update (dt) {\r\n        if(this._invincible){\r\n            this._invincibleDurTime += dt\r\n            if(this._invincibleDurTime >= this.invincibleTime){\r\n                this.setInvincible(false)\r\n            }\r\n        }\r\n    },\r\n\r\n    //************************************start logic*************************************************//\r\n    /**\r\n     * desc: left(-1) or right(1)\r\n     */\r\n    setLeftOrRight : function(leftOrRight){\r\n        this._leftOrRight = leftOrRight\r\n    },\r\n\r\n    /**\r\n     * desc: return left or right\r\n     */\r\n    getLeftOrRight : function(){\r\n        return this._leftOrRight\r\n    },\r\n\r\n    run : function(){\r\n        this._status = HeroStatus.running\r\n    },\r\n\r\n    jump : function(){\r\n        this._status = HeroStatus.jump\r\n    },\r\n\r\n    fly : function(){\r\n        this._status = HeroStatus.fly\r\n    },\r\n\r\n    dead : function(){\r\n        this._status = HeroStatus.dead\r\n    },\r\n\r\n\r\n    /**\r\n     * desc: add the prop\r\n     */\r\n    addProp : function(propNode){\r\n        propNode.getComponent(\"Prop\").beOnHero()\r\n        var propEnemyType = propNode.getComponent(\"Prop\").getPropEnemyType()\r\n        switch(propEnemyType){\r\n            case Global.enemyType.circleprop:\r\n                this.addCircleProp(propNode)\r\n                break\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: add the circle prop\r\n     */\r\n    addCircleProp(propNode){\r\n        this._allProps.circleprop.count += 1\r\n        propNode.parent = this.propCenterNode\r\n        propNode.setPosition(0, 0)\r\n        \r\n        if(!this._allProps.circleprop.circlePropNode){\r\n            this._allProps.circleprop.circlePropNode= propNode\r\n        }\r\n        \r\n    },\r\n    /**\r\n     * desc: delete one circle prop\r\n     */\r\n    deleteCircleProp : function(){\r\n        this._allProps.circleprop.count -= 1\r\n        if(this._allProps.circleprop.count <= 0){\r\n            this._allProps.circleprop.count = 0\r\n            this._allProps.circleprop.circlePropNode.getComponent(\"Prop\").beCollected()\r\n            this._allProps.circleprop.circlePropNode = null\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: set the hero invincible\r\n     */\r\n    setInvincible : function(invincible, type){\r\n        this._invincible = invincible\r\n        if(invincible){\r\n            this._oldParentNode = this.node.parent\r\n            this.node.parent = Global.gameMainScene.centerHeroPosNode\r\n            switch(type){\r\n                case Global.enemyType.bird:\r\n                    this.getComponent(cc.Animation).play(\"HeroBirdRushClip\")\r\n                    break\r\n                case Global.enemyType.dart2:\r\n                    this.getComponent(cc.Animation).play(\"HeroDartRushClip\")\r\n                    break\r\n                case Global.enemyType.linecat:\r\n                    this.getComponent(cc.Animation).play(\"HeroCatRushClip\")\r\n                    break\r\n            }\r\n        }else{\r\n            this.node.parent = this._oldParentNode\r\n            this.getComponent(cc.Animation).play(\"HeroRushClip\")\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * desc: get the hero invincible\r\n     */\r\n    getInvincible : function(){\r\n        return this._invincible\r\n    },\r\n\r\n    /**\r\n     * desc: 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionEnter: function (other, self) {\r\n        console.log('on collision enter')\r\n        \r\n        if(this._status !== HeroStatus.dead){\r\n            var group = cc.game.groupList[other.node.groupIndex]\r\n            if(group === \"enemy\"){\r\n                if(this._status === HeroStatus.running && !this._invincible){\r\n                    if(this._allProps.circleprop > 0){\r\n                        this.deleteCircleProp()\r\n                        other.node.getComponent(\"Enemy\").beKilled()\r\n                    }else{\r\n                        // dead, game oveer\r\n                        this.dead()\r\n                        Global.gameMainScene.gameOver()\r\n                        other.node.getComponent(\"Enemy\").beVictory()\r\n                    }\r\n                }else{\r\n                    other.node.getComponent(\"Enemy\").beKilled()\r\n                }\r\n            }else if(group === \"prop\") {\r\n                this.addProp(other.node)\r\n            }\r\n        }\r\n    },\r\n    //************************************end logic*************************************************//\r\n});\r\n"]}