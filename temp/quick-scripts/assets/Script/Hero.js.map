{"version":3,"sources":["Hero.js"],"names":["Global","require","HeroStatus","cc","Enum","dead","running","jump","fly","Class","extends","Component","properties","colliderProxy","default","type","onLoad","hero","_status","_gameMainScene","start","_leftOrRight","setRealListener","setGameMainScene","mainScene","setLeftOrRight","leftOrRight","getLeftOrRight","run","onCollisionEnter","other","self","console","log","group","game","groupList","node","groupIndex","gameOver","getComponent","beVictory","beKilled"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAIC,aAAaC,GAAGC,IAAH,CAAQ;AACrBC,UAAO,CAAC,CADa;AAErBC,aAAU,CAAC,CAFU;AAGrBC,UAAO,CAAC,CAHa;AAIrBC,SAAM,CAAC;AAJc,CAAR,CAAjB;;AAOAL,GAAGM,KAAH,CAAS;AACLC,aAASP,GAAGQ,SADP;;AAGLC,gBAAY;AACRC,uBAAgB;AACZC,qBAAU,IADE;AAEZC,kBAAOd,QAAQ,mBAAR;AAFK;AADR,KAHP;;AAUL;;AAEAe,UAZK,oBAYK;AACNhB,eAAOiB,IAAP,GAAc,IAAd;AACA,aAAKC,OAAL,GAAehB,WAAWI,OAA1B;AACA,aAAKa,cAAL,GAAsB,IAAtB;AACH,KAhBI;AAkBLC,SAlBK,mBAkBI;AACL,aAAKC,YAAL,GAAoB,CAAC,CAArB;AACA,aAAKR,aAAL,CAAmBS,eAAnB,CAAmC,IAAnC;AACH,KArBI;;;AAuBL;;AAEA;AACAC,oBA1BK,4BA0BYC,SA1BZ,EA0BsB;AACvB,aAAKL,cAAL,GAAsBK,SAAtB;AACH,KA5BI;;;AA8BLC,oBAAiB,wBAASC,WAAT,EAAqB;AAClC,aAAKL,YAAL,GAAoBK,WAApB;AACH,KAhCI;AAiCLC,oBAAiB,0BAAU;AACvB,eAAO,KAAKN,YAAZ;AACH,KAnCI;;AAqCLO,SAAM,eAAU;AACZ,aAAKV,OAAL,GAAehB,WAAWI,OAA1B;AACH,KAvCI;;AAyCLC,UAAO,gBAAU;AACb,aAAKW,OAAL,GAAehB,WAAWK,IAA1B;AACH,KA3CI;;AA6CLC,SAAM,eAAU;AACZ,aAAKU,OAAL,GAAehB,WAAWM,GAA1B;AACH,KA/CI;;AAiDLH,UAAO,gBAAU;AACb,aAAKa,OAAL,GAAehB,WAAWG,IAA1B;AACH,KAnDI;;AAqDL;;;;;AAKAwB,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACrCC,gBAAQC,GAAR,CAAY,oBAAZ;;AAEA,YAAG,KAAKf,OAAL,KAAiBhB,WAAWG,IAA/B,EAAoC;AAChC,gBAAI6B,QAAQ/B,GAAGgC,IAAH,CAAQC,SAAR,CAAkBN,MAAMO,IAAN,CAAWC,UAA7B,CAAZ;AACA,gBAAGJ,UAAU,OAAb,EAAqB;AACjB,oBAAG,KAAKhB,OAAL,KAAiBhB,WAAWI,OAA/B,EAAuC;AACnC;AACA,yBAAKD,IAAL;AACA,yBAAKc,cAAL,CAAoBoB,QAApB;AACAT,0BAAMO,IAAN,CAAWG,YAAX,CAAwB,OAAxB,EAAiCC,SAAjC;AACH,iBALD,MAKK;AACDX,0BAAMO,IAAN,CAAWG,YAAX,CAAwB,OAAxB,EAAiCE,QAAjC;AACH;AACJ,aATD,MASM,CAEL;AACJ;AACJ;;AA5EI,CAAT","file":"Hero.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar Global = require(\"Global\")\r\nvar HeroStatus = cc.Enum({\r\n    dead : -1,\r\n    running : -1,\r\n    jump : -1,\r\n    fly : -1\r\n})\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        colliderProxy : {\r\n            default : null,\r\n            type : require(\"HeroColliderProxy\")\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        Global.hero = this\r\n        this._status = HeroStatus.running\r\n        this._gameMainScene = null\r\n    },\r\n\r\n    start () {\r\n        this._leftOrRight = -1\r\n        this.colliderProxy.setRealListener(this)\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    // logic\r\n    setGameMainScene(mainScene){\r\n        this._gameMainScene = mainScene\r\n    },\r\n\r\n    setLeftOrRight : function(leftOrRight){\r\n        this._leftOrRight = leftOrRight\r\n    },\r\n    getLeftOrRight : function(){\r\n        return this._leftOrRight\r\n    },\r\n\r\n    run : function(){\r\n        this._status = HeroStatus.running\r\n    },\r\n\r\n    jump : function(){\r\n        this._status = HeroStatus.jump\r\n    },\r\n\r\n    fly : function(){\r\n        this._status = HeroStatus.fly\r\n    },\r\n\r\n    dead : function(){\r\n        this._status = HeroStatus.dead\r\n    },\r\n\r\n    /**\r\n     * 当碰撞产生的时候调用\r\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\r\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\r\n     */\r\n    onCollisionEnter: function (other, self) {\r\n        console.log('on collision enter')\r\n        \r\n        if(this._status !== HeroStatus.dead){\r\n            var group = cc.game.groupList[other.node.groupIndex]\r\n            if(group === \"enemy\"){\r\n                if(this._status === HeroStatus.running){\r\n                    // dead, game oveer\r\n                    this.dead()\r\n                    this._gameMainScene.gameOver()\r\n                    other.node.getComponent(\"Enemy\").beVictory()\r\n                }else{\r\n                    other.node.getComponent(\"Enemy\").beKilled()\r\n                }\r\n            }else {\r\n\r\n            }\r\n        }\r\n    },\r\n    \r\n});\r\n"]}