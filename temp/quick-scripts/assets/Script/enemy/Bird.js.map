{"version":3,"sources":["Bird.js"],"names":["cc","Class","extends","Component","properties","flyDownTime","default","type","Float","flyTime","flyToHeroTime","flyVictoryTime","_startSide","Integer","_overScreenX","_idle","Boolean","onLoad","node","getComponent","setRealListener","_enemyNodeType","Global","enemyNodeType","bird","console","log","uuid","start","reuse","onInit","setPosition","setScale","_startOffsetY","_targetWorldPos","Vec2","y","scheduleOnce","moveBird","setStartSide","startSide","setIdle","idle","moveDownAction","moveBy","delayAction","delayTime","moveToHeroPos","parent","convertToNodeSpace","x","Math","abs","moveToHeroAction","moveTo","callfunc","callFunc","target","beCollected","sequeenAction","sequence","runAction","setTargetWorldPos","worldPos","beVictory","stopAllActions","moveHorizon","callback","sequenceAction","beKilled","gameManager","collectEnemy","getEnemyNodeType","DisplayDeadEnemyState","BoxCollider","enabled"],"mappings":"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","file":"Bird.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\enemy","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 鸟儿向下移动进场时间\r\n        flyDownTime : {\r\n            default : 0.5,\r\n            type : cc.Float\r\n        },\r\n        // 定点飞行的时间\r\n        flyTime : {\r\n            default : 1.0,\r\n            type : cc.Float\r\n        },\r\n        // 飞向enemy的时间\r\n        flyToHeroTime : {\r\n            default : 5.0,\r\n            type : cc.Float\r\n        },\r\n        // 杀死hero之后的飞行动作时间\r\n        flyVictoryTime : {\r\n            default : 0.8,\r\n            type : cc.Float\r\n        },\r\n        // 鸟儿出现的位置\r\n        _startSide : {\r\n            default : -1, \r\n            type : cc.Integer\r\n        },\r\n        // 飞向hero的时候，终点在x方向的延长\r\n        _overScreenX : {\r\n            default : 100.0,\r\n            type : cc.Float\r\n        },\r\n        _idle : {\r\n            default : false,\r\n            type : cc.Boolean\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.node.getComponent(\"Enemy\").setRealListener(this)\r\n        this._enemyNodeType = Global.enemyNodeType.bird\r\n        console.log(\"Jump Hero : Bird onLoad \" + this.node.uuid)\r\n    },\r\n\r\n    start () {\r\n        console.log(\"Jump Hero :  Bird start \" + this.node.uuid)\r\n    },\r\n\r\n    reuse : function(){\r\n        console.log(\"Jump Hero :  Bird reuse \" + this.node.uuid)\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    //************************************start logic*************************************************//\r\n    onInit : function(){\r\n        this.node.setPosition(0, 0)\r\n        this.node.setScale(1)\r\n\r\n        this._startOffsetY = 100\r\n        this._startSide = -1\r\n        this._targetWorldPos = cc.Vec2(0, 0)\r\n        this.node.y += this._startOffsetY\r\n        this._idle = false\r\n\r\n        this.scheduleOnce(this.moveBird, 0.1)\r\n\r\n        console.log(\"Jump Hero :  Bird onInit \" + this.node.uuid)\r\n    },\r\n\r\n    \r\n\r\n    /**\r\n     * desc: set the start side\r\n     */\r\n    setStartSide : function(startSide){\r\n        this._startSide = startSide\r\n        console.log(\"Jump Hero :  Bird setStartSide \" + this.node.uuid)\r\n    },\r\n\r\n    /**\r\n     * desc: set the enemy state\r\n     */\r\n    setIdle : function(idle){\r\n        this._idle= idle\r\n        console.log(\"Jump Hero : Bird setIdle \" + this.node.uuid)\r\n    },\r\n\r\n    /**\r\n     * desc: move the bird\r\n     */\r\n    moveBird : function(){\r\n        if(this._idle){\r\n            return\r\n        }\r\n        var moveDownAction = cc.moveBy(this.flyDownTime, 0, this._startOffsetY * (-1))\r\n        var delayAction = cc.delayTime(this.flyTime)\r\n\r\n        var moveToHeroPos = this.node.parent.convertToNodeSpace(this._targetWorldPos)\r\n        moveToHeroPos.x += -this._startSide*this._overScreenX\r\n        moveToHeroPos.y -= (this._overScreenX * Math.abs(this.node.y - moveToHeroPos.y)) / (Math.abs(this.node.x - moveToHeroPos.x))\r\n        var moveToHeroAction = cc.moveTo(this.flyToHeroTime, moveToHeroPos)\r\n        \r\n        var callfunc = cc.callFunc(function(target){\r\n             this.beCollected()\r\n        }, this)\r\n        var sequeenAction = cc.sequence(moveDownAction, delayAction, moveToHeroAction, callfunc)\r\n        this.node.runAction(sequeenAction)\r\n    },\r\n\r\n    /**\r\n     * desc: set the target world pos\r\n     */\r\n    setTargetWorldPos : function(worldPos){\r\n        this._targetWorldPos = worldPos\r\n        console.log(\"Jump Hero : Bird setTargetWorldPos \" + this.node.uuid)\r\n    },\r\n\r\n    /**\r\n     * desc: when victory (kill the hero)\r\n     */\r\n    beVictory : function(){\r\n        this.node.stopAllActions()\r\n        var moveHorizon = cc.moveBy(this.flyVictoryTime, -this._startSide * 200, 0)\r\n        var callback = cc.callFunc(\r\n            function(target){\r\n                this.beCollected()\r\n            }, this)\r\n        var sequenceAction = cc.sequence(moveHorizon, callback)\r\n        this.node.runAction(sequenceAction)\r\n\r\n        console.log(\"Jump Hero : Bird beVictory \" + this.node.uuid)\r\n    },\r\n\r\n    /**\r\n     * desc: when killed by hero\r\n     */\r\n    beKilled : function(){\r\n        //todo: run dead animation\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this._enemyNodeType)\r\n        console.log(\"Jump Hero : Bird beKilled \" + this.node.uuid)\r\n    },\r\n    /**\r\n     * desc: node to be collected\r\n     */\r\n    beCollected : function(){\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this._enemyNodeType)\r\n        console.log(\"Jump Hero : Bird beCollected \" + this.node.uuid)\r\n    },\r\n\r\n    /**\r\n     * desc: get enemy node type\r\n     */\r\n    getEnemyNodeType : function(){\r\n        return this._enemyNodeType\r\n    },\r\n    /**\r\n     * desc: display the dead enemy when killed\r\n     */\r\n    DisplayDeadEnemyState : function(){\r\n        this.getComponent(cc.BoxCollider).enabled = false\r\n        this.setIdle(true)\r\n    }\r\n    //************************************start logic*************************************************//\r\n});\r\n"]}