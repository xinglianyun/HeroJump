{"version":3,"sources":["CatEnemy.js"],"names":["cc","Class","extends","Component","properties","runTime","default","type","Float","_idle","Boolean","onLoad","node","getComponent","setRealListener","_enemyNodeType","Global","enemyNodeType","cat","start","moveAction","moveBy","director","getWinSize","width","callfunc","callFunc","target","scaleX","reverseMoveAction","reverse","sequence","repeat","repeatForever","runAction","beVictory","stopAllActions","beKilled","gameManager","collectEnemy","beCollected","setIdle","idle"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,iBAAU;AACNC,qBAAU,GADJ;AAENC,kBAAOP,GAAGQ;AAFJ,SAFF;AAMRC,eAAQ;AACJH,qBAAU,KADN;AAEJC,kBAAOP,GAAGU;AAFN;AANA,KAHP;;AAeL;;AAEAC,UAjBK,oBAiBK;AACN,aAAKC,IAAL,CAAUC,YAAV,CAAuB,OAAvB,EAAgCC,eAAhC,CAAgD,IAAhD;AACA,aAAKC,cAAL,GAAsBC,OAAOC,aAAP,CAAqBC,GAA3C;AACH,KApBI;AAsBLC,SAtBK,mBAsBI;AACL,YAAG,KAAKV,KAAR,EAAc;AACV;AACH;AACD,YAAIW,aAAapB,GAAGqB,MAAH,CAAU,KAAKhB,OAAf,EAAwBL,GAAGsB,QAAH,CAAYC,UAAZ,GAAyBC,KAAjD,EAAwD,CAAxD,CAAjB;AACA,YAAIC,WAAWzB,GAAG0B,QAAH,CAAa,UAASC,MAAT,EAAgB;AACxC,iBAAKf,IAAL,CAAUgB,MAAV,IAAoB,CAAC,CAArB;AACH,SAFc,EAEZ,IAFY,CAAf;AAGA,YAAIC,oBAAoBT,WAAWU,OAAX,EAAxB;AACA,YAAIC,WAAW/B,GAAG+B,QAAH,CAAYX,UAAZ,EAAwBK,QAAxB,EAAkCI,iBAAlC,EAAqDJ,QAArD,CAAf;AACA,YAAIO,SAAShC,GAAGiC,aAAH,CAAiBF,QAAjB,CAAb;AACA,aAAKnB,IAAL,CAAUsB,SAAV,CAAoBF,MAApB;AACH,KAlCI;;;AAoCL;;AAEA;AACA;;;AAGAG,eAAY,qBAAU;AAClB,aAAKvB,IAAL,CAAUwB,cAAV;AACH,KA5CI;AA6CL;;;AAGAC,cAAW,oBAAU;AACjB,aAAKzB,IAAL,CAAUwB,cAAV;AACApB,eAAOsB,WAAP,CAAmBC,YAAnB,CAAgC,KAAK3B,IAArC,EAA2C,KAAKG,cAAhD;AACH,KAnDI;;AAqDL;;;AAGAyB,iBAAc,uBAAU;AACpB,aAAK5B,IAAL,CAAUwB,cAAV;AACApB,eAAOsB,WAAP,CAAmBC,YAAnB,CAAgC,KAAK3B,IAArC,EAA2C,KAAKG,cAAhD;AACH,KA3DI;;AA6DL;;;AAGA0B,aAAU,iBAASC,IAAT,EAAc;AACpB,aAAKjC,KAAL,GAAYiC,IAAZ;AACH;AACD;AAnEK,CAAT","file":"CatEnemy.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\enemy","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 左右移动一次需要的时间\r\n        runTime : {\r\n            default : 1.5,\r\n            type : cc.Float\r\n        },\r\n        _idle : {\r\n            default : false,\r\n            type : cc.Boolean\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.node.getComponent(\"Enemy\").setRealListener(this)\r\n        this._enemyNodeType = Global.enemyNodeType.cat\r\n    },\r\n\r\n    start () {\r\n        if(this._idle){\r\n            return\r\n        }\r\n        var moveAction = cc.moveBy(this.runTime, cc.director.getWinSize().width, 0)\r\n        var callfunc = cc.callFunc( function(target){\r\n            this.node.scaleX *= -1\r\n        }, this)\r\n        var reverseMoveAction = moveAction.reverse()\r\n        var sequence = cc.sequence(moveAction, callfunc, reverseMoveAction, callfunc)\r\n        var repeat = cc.repeatForever(sequence)\r\n        this.node.runAction(repeat)\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    //************************************start logic*************************************************//\r\n    /**\r\n     * desc: when victory (kill the hero)\r\n     */\r\n    beVictory : function(){\r\n        this.node.stopAllActions()\r\n    },\r\n    /**\r\n     * desc: when killed by hero\r\n     */\r\n    beKilled : function(){\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this._enemyNodeType)\r\n    },\r\n\r\n    /**\r\n     * desc: node to be collected\r\n     */\r\n    beCollected : function(){\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this._enemyNodeType)\r\n    },\r\n\r\n    /**\r\n     * desc: set the enemy state\r\n     */\r\n    setIdle : function(idle){\r\n        this._idle= idle\r\n    },\r\n    //************************************end logic*************************************************//\r\n});\r\n"]}