{"version":3,"sources":["CatEnemy.js"],"names":["cc","Class","extends","Component","properties","runTime","default","type","Float","_idle","Boolean","onLoad","node","getComponent","setRealListener","_enemyNodeType","Global","enemyNodeType","cat","start","reuse","_realListener","onInit","setPosition","setScale","scheduleOnce","runForwardBack","moveAction","moveBy","director","getWinSize","width","callfunc","callFunc","target","scaleX","reverseMoveAction","reverse","sequence","repeat","repeatForever","runAction","beVictory","stopAllActions","beKilled","gameManager","collectEnemy","beCollected","setIdle","idle","getEnemyNodeType","DisplayDeadEnemyState","isDeadState","BoxCollider","enabled"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,iBAAU;AACNC,qBAAU,GADJ;AAENC,kBAAOP,GAAGQ;AAFJ,SAFF;AAMRC,eAAQ;AACJH,qBAAU,KADN;AAEJC,kBAAOP,GAAGU;AAFN;AANA,KAHP;;AAeL;;AAEAC,UAjBK,oBAiBK;AACN,aAAKC,IAAL,CAAUC,YAAV,CAAuB,OAAvB,EAAgCC,eAAhC,CAAgD,IAAhD;AACA,aAAKC,cAAL,GAAsBC,OAAOC,aAAP,CAAqBC,GAA3C;AACH,KApBI;AAsBLC,SAtBK,mBAsBI,CAER,CAxBI;;;AA0BLC,WAAQ,iBAAU;AACd,YAAG,KAAKC,aAAR,EAAsB;AAClB,iBAAKA,aAAL,CAAmBD,KAAnB;AACH;AACJ,KA9BI;;AAgCL;;AAEA;AACAE,YAAS,kBAAU;AACf,aAAKb,KAAL,GAAa,KAAb;AACA,aAAKG,IAAL,CAAUW,WAAV,CAAsB,CAAtB,EAAyB,CAAzB;AACA,aAAKX,IAAL,CAAUY,QAAV,CAAmB,CAAnB;;AAEA,aAAKC,YAAL,CAAkB,KAAKC,cAAvB,EAAuC,GAAvC;AACH,KAzCI;;AA2CL;;;AAGAA,oBAAiB,0BAAU;AACvB,YAAG,KAAKjB,KAAR,EAAc;AACV;AACH;AACD,YAAIkB,aAAa3B,GAAG4B,MAAH,CAAU,KAAKvB,OAAf,EAAwBL,GAAG6B,QAAH,CAAYC,UAAZ,GAAyBC,KAAjD,EAAwD,CAAxD,CAAjB;AACA,YAAIC,WAAWhC,GAAGiC,QAAH,CAAa,UAASC,MAAT,EAAgB;AACxC,iBAAKtB,IAAL,CAAUuB,MAAV,IAAoB,CAAC,CAArB;AACH,SAFc,EAEZ,IAFY,CAAf;AAGA,YAAIC,oBAAoBT,WAAWU,OAAX,EAAxB;AACA,YAAIC,WAAWtC,GAAGsC,QAAH,CAAYX,UAAZ,EAAwBK,QAAxB,EAAkCI,iBAAlC,EAAqDJ,QAArD,CAAf;AACA,YAAIO,SAASvC,GAAGwC,aAAH,CAAiBF,QAAjB,CAAb;AACA,aAAK1B,IAAL,CAAU6B,SAAV,CAAoBF,MAApB;AACH,KA1DI;AA2DL;;;AAGAG,eAAY,qBAAU;AAClB,aAAK9B,IAAL,CAAU+B,cAAV;AACH,KAhEI;AAiEL;;;AAGAC,cAAW,oBAAU;AACjB,aAAKhC,IAAL,CAAU+B,cAAV;AACA3B,eAAO6B,WAAP,CAAmBC,YAAnB,CAAgC,KAAKlC,IAArC,EAA2C,KAAKG,cAAhD;AACH,KAvEI;;AAyEL;;;AAGAgC,iBAAc,uBAAU;AACpB,aAAKnC,IAAL,CAAU+B,cAAV;AACA3B,eAAO6B,WAAP,CAAmBC,YAAnB,CAAgC,KAAKlC,IAArC,EAA2C,KAAKG,cAAhD;AACH,KA/EI;;AAiFL;;;AAGAiC,aAAU,iBAASC,IAAT,EAAc;AACpB,aAAKxC,KAAL,GAAYwC,IAAZ;AACH,KAtFI;;AAwFL;;;AAGAC,sBAAmB,4BAAU;AACzB,eAAO,KAAKnC,cAAZ;AACH,KA7FI;;AA+FL;;;AAGAoC,2BAAwB,+BAASC,WAAT,EAAqB;AACzC,aAAKvC,YAAL,CAAkBb,GAAGqD,WAArB,EAAkCC,OAAlC,GAA4C,CAACF,WAA7C;AACA,aAAKJ,OAAL,CAAaI,WAAb;AACH;AACD;AAtGK,CAAT","file":"CatEnemy.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\enemy","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 左右移动一次需要的时间\r\n        runTime : {\r\n            default : 1.5,\r\n            type : cc.Float\r\n        },\r\n        _idle : {\r\n            default : false,\r\n            type : cc.Boolean\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.node.getComponent(\"Enemy\").setRealListener(this)\r\n        this._enemyNodeType = Global.enemyNodeType.cat\r\n    },\r\n\r\n    start () {\r\n        \r\n    },\r\n\r\n    reuse : function(){\r\n        if(this._realListener){\r\n            this._realListener.reuse()\r\n        }\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    //************************************start logic*************************************************//\r\n    onInit : function(){\r\n        this._idle = false\r\n        this.node.setPosition(0, 0)\r\n        this.node.setScale(1)\r\n\r\n        this.scheduleOnce(this.runForwardBack, 0.1)\r\n    },\r\n\r\n    /**\r\n     * desc: \r\n     */\r\n    runForwardBack : function(){\r\n        if(this._idle){\r\n            return\r\n        }\r\n        var moveAction = cc.moveBy(this.runTime, cc.director.getWinSize().width, 0)\r\n        var callfunc = cc.callFunc( function(target){\r\n            this.node.scaleX *= -1\r\n        }, this)\r\n        var reverseMoveAction = moveAction.reverse()\r\n        var sequence = cc.sequence(moveAction, callfunc, reverseMoveAction, callfunc)\r\n        var repeat = cc.repeatForever(sequence)\r\n        this.node.runAction(repeat)\r\n    },\r\n    /**\r\n     * desc: when victory (kill the hero)\r\n     */\r\n    beVictory : function(){\r\n        this.node.stopAllActions()\r\n    },\r\n    /**\r\n     * desc: when killed by hero\r\n     */\r\n    beKilled : function(){\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this._enemyNodeType)\r\n    },\r\n\r\n    /**\r\n     * desc: node to be collected\r\n     */\r\n    beCollected : function(){\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this._enemyNodeType)\r\n    },\r\n\r\n    /**\r\n     * desc: set the enemy state\r\n     */\r\n    setIdle : function(idle){\r\n        this._idle= idle\r\n    },\r\n\r\n    /**\r\n     * desc: get enemy node type\r\n     */\r\n    getEnemyNodeType : function(){\r\n        return this._enemyNodeType\r\n    },\r\n\r\n    /**\r\n     * desc: display the dead enemy when killed\r\n     */\r\n    DisplayDeadEnemyState : function(isDeadState){\r\n        this.getComponent(cc.BoxCollider).enabled = !isDeadState\r\n        this.setIdle(isDeadState)\r\n    }\r\n    //************************************end logic*************************************************//\r\n});\r\n"]}