{"version":3,"sources":["DartEnemy.js"],"names":["Global","require","dartNodes","cc","Class","extends","Component","properties","type","default","String","emitDartTime","Float","_startSide","Integer","_overScreenX","addChildDartNode","dartNode","getComponent","setGameManager","_gameManager","parent","node","push","onLoad","_game","find","_gameMainScene","_totalOffsetY","_targetWorldPos","Vec2","_isEmitDart","setRealListener","start","update","dt","gameMainSceneSpeed","getRunSpeed","offsetY","y","Math","abs","director","getWinSize","height","emitDartNode","math","collectEnemy","setStartSide","startSide","gameManager","setTargetWorldPos","worldPos","beVictory","stopAllActions","beKilled","i","moveToHeroPos","convertToNodeSpace","x","moveAction","moveTo","callfunc","callFunc","target","sequence","runAction","moveBy","width","length"],"mappings":"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","file":"DartEnemy.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\enemy","sourcesContent":["\r\nvar Global = require(\"Global\")\r\nvar dartNodes = [];\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        type : {\r\n            default : \"dartenemy\",\r\n            type : cc.String\r\n        },\r\n        // emit the dart when the dart enemy go throw the screen\r\n        emitDartTime : {\r\n            default : 0.5,\r\n            type : cc.Float\r\n        },\r\n        _startSide : {\r\n            default : -1, \r\n            type : cc.Integer\r\n        },\r\n        _overScreenX : {\r\n            default : -100.0,\r\n            type : cc.Float\r\n        },\r\n    },\r\n\r\n\r\n    //logic\r\n    addChildDartNode : function(dartNode){\r\n        dartNode.getComponent(\"DartNode\").setGameManager(this._gameManager)\r\n        dartNode.parent = this.node\r\n        dartNodes.push(dartNode)\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this._game = cc.find(\"Game\")\r\n        this._gameMainScene = this._game.getComponent(\"GameMainScene\")\r\n        this._totalOffsetY = 0.0\r\n        this._startSide = -1\r\n        this._targetWorldPos = cc.Vec2(0, 0)\r\n        this._isEmitDart = false\r\n        this.node.getComponent(\"Enemy\").setRealListener(this)\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        var gameMainSceneSpeed = this._gameMainScene.getRunSpeed()\r\n        var offsetY = gameMainSceneSpeed * dt\r\n        this.node.y -= offsetY\r\n        this._totalOffsetY += offsetY\r\n\r\n        if(!this._isEmitDart){\r\n            if(Math.abs(this._totalOffsetY) >= cc.director.getWinSize().height * this.emitDartTime){\r\n                // emit the DartNode\r\n                this.emitDartNode()\r\n                this._isEmitDart = true\r\n            }\r\n        }\r\n\r\n        if(math.abs(this._totalOffsetY) >= cc.director.getWinSize() * 1.5){\r\n            this._gameManager.collectEnemy(this.node, this.type)\r\n        }\r\n        \r\n    },\r\n\r\n    // logic\r\n    setStartSide : function(startSide){\r\n        this._startSide = startSide\r\n    },\r\n\r\n    setGameManager : function(gameManager){\r\n        this._gameManager = gameManager\r\n    },\r\n\r\n    setTargetWorldPos : function(worldPos){\r\n        this._targetWorldPos = worldPos\r\n    },\r\n\r\n    beVictory : function(){\r\n        this.node.stopAllActions()\r\n    },\r\n\r\n    beKilled : function(){\r\n        this.node.stopAllActions()\r\n        this._gameManager.collectEnemy(this.node, this.type)\r\n    },\r\n\r\n    emitDartNode : function(){\r\n        \r\n        for(let i = 0; i < dartNodes.length; ++i){\r\n            //dartNodes[i].getComponent(\"DartNode\").runToTarget(this._targetWorldPos, i, dartNodes.length)\r\n            if(i === 0){\r\n                var moveToHeroPos = this.node.parent.convertToNodeSpace(this._targetWorldPos)\r\n                moveToHeroPos.x += -this._startSide*this._overScreenX\r\n                moveToHeroPos.y -= (this._overScreenX * Math.abs(this.node.y - moveToHeroPos.y)) / (Math.abs(this.node.x - moveToHeroPos.x))\r\n                var moveAction = cc.moveTo(cc.director.getWinSize().height * (1- this.emitDartTime) / this._gameMainScene.getRunSpeed() * 0.5, moveToHeroPos)\r\n    \r\n                var callfunc = cc.callFunc(function(target){\r\n                    this._gameManager.collectEnemy(dartNodes[i], \"dartnode\")\r\n                }, this)\r\n                var sequence = cc.sequence(moveAction, callfunc)\r\n                dartNodes[i].parent = this.node.parent\r\n                dartNodes[i].runAction(sequence)\r\n            }else if(i === 1){\r\n                var moveAction = cc.moveBy(cc.director.getWinSize().height * (1- this.emitDartTime) / this._gameMainScene.getRunSpeed(), -this._startSide * cc.director.getWinSize().width, 0)\r\n\r\n                var callfunc = cc.callFunc(function(target){\r\n                    this._gameManager.collectEnemy(dartNodes[i], \"dartnode\")\r\n                }, this)\r\n                var sequence = cc.sequence(moveAction, callfunc)\r\n                dartNodes[i].runAction(sequence)\r\n            }else if(i === 2){\r\n\r\n            }\r\n        }\r\n    }\r\n});\r\n"]}