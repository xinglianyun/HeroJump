{"version":3,"sources":["DartNode.js"],"names":["cc","Class","extends","Component","properties","_idle","default","type","Boolean","onLoad","node","getComponent","setRealListener","_enemyNodeType","Global","enemyNodeType","dartnode","start","beVictory","stopAllActions","beKilled","gameManager","collectEnemy","beCollected","setIdle","idle"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAQ;AACJC,qBAAU,KADN;AAEJC,kBAAOP,GAAGQ;AAFN;AADA,KAHP;;AAUL;;AAEAC,UAZK,oBAYK;AACN,aAAKC,IAAL,CAAUC,YAAV,CAAuB,OAAvB,EAAgCC,eAAhC,CAAgD,IAAhD;AACA,aAAKC,cAAL,GAAsBC,OAAOC,aAAP,CAAqBC,QAA3C;AACH,KAfI;AAiBLC,SAjBK,mBAiBI,CAER,CAnBI;;;AAqBL;;AAEA;AACA;;;AAGAC,eAAY,qBAAU;AAClB,aAAKR,IAAL,CAAUS,cAAV;AACH,KA7BI;AA8BL;;;AAGAC,cAAW,oBAAU;AACjB,aAAKV,IAAL,CAAUS,cAAV;AACAL,eAAOO,WAAP,CAAmBC,YAAnB,CAAgC,KAAKZ,IAArC,EAA2C,KAAKG,cAAhD;AACH,KApCI;;AAsCL;;;AAGAU,iBAAc,uBAAU;AACpB,aAAKb,IAAL,CAAUS,cAAV;AACAL,eAAOO,WAAP,CAAmBC,YAAnB,CAAgC,KAAKZ,IAArC,EAA2C,KAAKG,cAAhD;AACH,KA5CI;;AA8CL;;;AAGAW,aAAU,iBAASC,IAAT,EAAc;AACpB,aAAKpB,KAAL,GAAYoB,IAAZ;AACH;;AAED;AArDK,CAAT","file":"DartNode.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\enemy","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _idle : {\r\n            default : false,\r\n            type : cc.Boolean\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.node.getComponent(\"Enemy\").setRealListener(this)\r\n        this._enemyNodeType = Global.enemyNodeType.dartnode\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    //************************************start logic*************************************************//\r\n    /**\r\n     * desc: kill the hero\r\n     */    \r\n    beVictory : function(){\r\n        this.node.stopAllActions()\r\n    },\r\n    /**\r\n     * desc: killed by the hero\r\n     */\r\n    beKilled : function(){\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this._enemyNodeType)\r\n    },\r\n\r\n    /**\r\n     * desc: node to be collected\r\n     */\r\n    beCollected : function(){\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this._enemyNodeType)\r\n    },\r\n\r\n    /**\r\n     * desc: set the enemy state\r\n     */\r\n    setIdle : function(idle){\r\n        this._idle= idle\r\n    },\r\n\r\n    //************************************end logic*************************************************//\r\n});\r\n"]}