{"version":3,"sources":["ShortBarrierEnemy.js"],"names":["cc","Class","extends","Component","properties","type","default","String","onLoad","node","getComponent","setRealListener","start","_totalOffsetY","update","dt","offsetY","Global","gameMainScene","getRunSpeed","y","Math","abs","director","getWinSize","height","beKilled","beVictory","stopAllActions","gameManager","collectEnemy"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAAO;AACHC,qBAAU,cADP;AAEHD,kBAAOL,GAAGO;AAFP;AAhBC,KAHP;;AAyBL;;AAEAC,UA3BK,oBA2BK;AACN,aAAKC,IAAL,CAAUC,YAAV,CAAuB,OAAvB,EAAgCC,eAAhC,CAAgD,IAAhD;AACH,KA7BI;AA+BLC,SA/BK,mBA+BI;AACL,aAAKC,aAAL,GAAqB,GAArB;AACH,KAjCI;AAmCLC,UAnCK,kBAmCGC,EAnCH,EAmCO;AACR,YAAIC,UAAUC,OAAOC,aAAP,CAAqBC,WAArB,KAAqCJ,EAAnD;AACA,aAAKN,IAAL,CAAUW,CAAV,IAAeJ,OAAf;AACA,aAAKH,aAAL,IAAsBG,OAAtB;;AAEA,YAAGK,KAAKC,GAAL,CAAS,KAAKT,aAAd,KAAgCb,GAAGuB,QAAH,CAAYC,UAAZ,GAAyBC,MAAzB,GAAkC,GAArE,EAAyE;AACrE,iBAAKC,QAAL;AACH;AACJ,KA3CI;;;AA6CL;AACAC,eAAY,qBAAU;AAClB,aAAKlB,IAAL,CAAUmB,cAAV;AACH,KAhDI;AAiDLF,cAAW,oBAAU;AACjB,aAAKjB,IAAL,CAAUmB,cAAV;AACAX,eAAOY,WAAP,CAAmBC,YAAnB,CAAgC,KAAKrB,IAArC,EAA2C,KAAKJ,IAAhD;AACH;AApDI,CAAT","file":"ShortBarrierEnemy.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\enemy","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        type : {\r\n            default : \"shortbarrier\",\r\n            type : cc.String\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.node.getComponent(\"Enemy\").setRealListener(this)\r\n    },\r\n\r\n    start () {\r\n        this._totalOffsetY = 0.0\r\n    },\r\n\r\n    update (dt) {\r\n        var offsetY = Global.gameMainScene.getRunSpeed() * dt\r\n        this.node.y += offsetY\r\n        this._totalOffsetY += offsetY\r\n\r\n        if(Math.abs(this._totalOffsetY) >= cc.director.getWinSize().height * 1.5){\r\n            this.beKilled()\r\n        }\r\n    },\r\n\r\n    // logic\r\n    beVictory : function(){\r\n        this.node.stopAllActions()\r\n    },\r\n    beKilled : function(){\r\n        this.node.stopAllActions()\r\n        Global.gameManager.collectEnemy(this.node, this.type)\r\n    }\r\n});\r\n"]}